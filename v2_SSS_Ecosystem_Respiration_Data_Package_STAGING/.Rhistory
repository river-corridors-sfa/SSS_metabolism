---
title: "K estimation"
library(tidyverse);library(dplyr)
data1<-read.csv("Inputs/v2_SSS_Water_Depth_Summary.csv",skip=8) #from this data package: https://data.ess-dive.lbl.gov/datasets/doi:10.15485/1969566
data2<-read.csv("Inputs/v2_SSS_Slope_Discharge_Velocity.csv", skip = 6) #We obtained the streamflow and flow velocity from NOAA National Water Model (NWM) retrospective dataset using version 2.1 of NWM. The dataset provides a 42-year (February through December 2020) hourly simulation at all sampling locations (except COMID 24125857). We computed the monthly averaged streamflow and velocity in August across these simulation years. Slope was extracted from NHDplus v2.1
colnames(data2)<-c("Site_ID","comid","slope","discharge","velocity")
data1$Average_Depth_m=data1$Average_Depth/100
data = merge(data1,data2, by = 'Site_ID')
data = data %>% select("Site_ID","Average_Depth_m","discharge","velocity","slope")
## Estamate k600 using Raymond 2012 table 2 equation 7:  k600=4725 · (VS)^0.86 · Q^-0.14 · D^0.66
#k600 [m/d], velocity V [m/s], slpe S [-], depth D [m], discharge Q [m^3/s]
```{r message=FALSE}
data$k600_md<-4725*(data$velocity*data$slope)^0.86*data$discharge^-0.14*data$Average_Depth_m^0.66
data$K600_1_per_d = data$k600_md/data$Average_Depth_m
output<-data.frame(data[c("Site_ID","K600_1_per_d")])
colnames(output)=c("Site_ID","K600")
output$K600<-round(output$K600,2)
header <- tibble::tibble(header = c('# HeaderRows_4',
'# HeaderRows_Format: Column_Header; Unit; InstallationMethod_ID; Instrument_Summary',
'K600; 1_per_day; N/A; Calculated using (1) depth (2) flow (3) velocity and (4) slope as inputs for the Raymond et al. (2012) table 2 equation 7. The result from that calculation is then divided by depth.'))
write_csv(header, 'Inputs/v2_SSS_K600.csv', col_names = F)
write_csv(output, 'Inputs/v2_SSS_K600.csv', append = T, col_names = T)
getwd()
data.path = "Inputs/"
dat = read.csv(paste0(data.path,'Sensor_Files/',PARENT_ID,"_Temp_DO_Press_Depth.csv"),header=T,skip=8)
K600estimates=read.csv(paste0(data.path,'v2_SSS_K600.csv'),header=T,skip=3)
PARENT_ID<-'SSS001'
dat = read.csv(paste0(data.path,'Sensor_Files/',PARENT_ID,"_Temp_DO_Press_Depth.csv"),header=T,skip=8)
dat = read.csv(paste0(data.path,'Sensor_Files/v2_',PARENT_ID,"_Temp_DO_Press_Depth.csv"),header=T,skip=8)
K600estimates=read.csv(paste0(data.path,'v2_SSS_K600.csv'),header=T,skip=3)
K600estimate<-K600estimates[K600estimates$Site_ID==SITE_ID,2]
print("K600 estimate: ")
K600estimate
SITE_ID<-'S63'
K600estimate<-K600estimates[K600estimates$Site_ID==SITE_ID,2]
print("K600 estimate: ")
K600estimate
output.path="Outputs/"
?calc_DO_sat
metadata.path="C:/Users/gara009/OneDrive - PNNL/Documents/GitHub/SSS_metabolism/Published_Data/v2_SSS_Data_Package/" #from this data package: https://data.ess-dive.lbl.gov/datasets/doi:10.15485/1969566
output.path= "Output/"
metadata=read.csv(paste(metadata.path,'v2_SSS_Metadata_IGSN-Mapping.csv',sep=''),skip=1,header=T)
metadata <- metadata[grepl("Water", metadata$Sample_Name, ignore.case = TRUE),]
SITE_LIST<-data.frame(substring(metadata$Sample_Name,0,6),metadata$Locality)
colnames(SITE_LIST)<-c('PARENT_ID','SITE_ID')
View(SITE_LIST)
##Matt Kaufman matthew.kaufman@pnnl.gov Pacific Northwest National Laboratory
##This script loads the list of SSS sites from the published metadata and loops through them all,
##running the stream metabolizer template for each one
metadata.path="C:/Users/gara009/OneDrive - PNNL/Documents/GitHub/SSS_metabolism/Published_Data/v2_SSS_Data_Package/" #from this data package: https://data.ess-dive.lbl.gov/datasets/doi:10.15485/1969566
output.path= "Output/"
metadata=read.csv(paste(metadata.path,'v2_SSS_Metadata_IGSN-Mapping.csv',sep=''),skip=1,header=T)
metadata <- metadata[grepl("Water", metadata$Sample_Name, ignore.case = TRUE),]
SITE_LIST<-data.frame(substring(metadata$Sample_Name,0,6),metadata$Locality)
colnames(SITE_LIST)<-c('PARENT_ID','SITE_ID')
#for(i in 1:length(SITE_LIST[,1])) {
for(i in 1:1) {
PARENT_ID<-SITE_LIST[i,1]
SITE_ID<-SITE_LIST[i,2]
htmlfilename=paste0(getwd(),"/",output.path,'v2_',PARENT_ID,'_',SITE_ID,'_SM_output.HTML')
rmarkdown::render("Scripts/v2_SSS_SM_final_template.Rmd",
output_file = htmlfilename,
params = list(
PARENT_ID=PARENT_ID,
SITE_ID=SITE_ID
))
}
##Matt Kaufman matthew.kaufman@pnnl.gov Pacific Northwest National Laboratory
##This script loads the list of SSS sites from the published metadata and loops through them all,
##running the stream metabolizer template for each one
metadata.path="C:/Users/gara009/OneDrive - PNNL/Documents/GitHub/SSS_metabolism/Published_Data/v2_SSS_Data_Package/" #from this data package: https://data.ess-dive.lbl.gov/datasets/doi:10.15485/1969566
output.path= "Outputs/"
metadata=read.csv(paste(metadata.path,'v2_SSS_Metadata_IGSN-Mapping.csv',sep=''),skip=1,header=T)
metadata <- metadata[grepl("Water", metadata$Sample_Name, ignore.case = TRUE),]
SITE_LIST<-data.frame(substring(metadata$Sample_Name,0,6),metadata$Locality)
colnames(SITE_LIST)<-c('PARENT_ID','SITE_ID')
#for(i in 1:length(SITE_LIST[,1])) {
for(i in 1:1) {
PARENT_ID<-SITE_LIST[i,1]
SITE_ID<-SITE_LIST[i,2]
htmlfilename=paste0(getwd(),"/",output.path,'v2_',PARENT_ID,'_',SITE_ID,'_SM_output.HTML')
rmarkdown::render("Scripts/v2_SSS_SM_final_template.Rmd",
output_file = htmlfilename,
params = list(
PARENT_ID=PARENT_ID,
SITE_ID=SITE_ID
))
}
##Matt Kaufman matthew.kaufman@pnnl.gov Pacific Northwest National Laboratory
##This script loads the list of SSS sites from the published metadata and loops through them all,
##running the stream metabolizer template for each one
metadata.path="C:/Users/gara009/OneDrive - PNNL/Documents/GitHub/SSS_metabolism/Published_Data/v2_SSS_Data_Package/" #from this data package: https://data.ess-dive.lbl.gov/datasets/doi:10.15485/1969566
output.path= "Outputs/"
metadata=read.csv(paste(metadata.path,'v2_SSS_Metadata_IGSN-Mapping.csv',sep=''),skip=1,header=T)
metadata <- metadata[grepl("Water", metadata$Sample_Name, ignore.case = TRUE),]
SITE_LIST<-data.frame(substring(metadata$Sample_Name,0,6),metadata$Locality)
colnames(SITE_LIST)<-c('PARENT_ID','SITE_ID')
for(i in 1:length(SITE_LIST[,1])) {
#for(i in 1:1) {
PARENT_ID<-SITE_LIST[i,1]
SITE_ID<-SITE_LIST[i,2]
htmlfilename=paste0(getwd(),"/",output.path,'v2_',PARENT_ID,'_',SITE_ID,'_SM_output.HTML')
rmarkdown::render("Scripts/v2_SSS_SM_final_template.Rmd",
output_file = htmlfilename,
params = list(
PARENT_ID=PARENT_ID,
SITE_ID=SITE_ID
))
}
---
title: "stream metabolizer SSS template"
folder<-'Outputs/'
filenamelist<-list.files(folder, pattern='daily_prediction_results')
SITE_IDlist<-sapply(strsplit(filenamelist, "_"), "[", 2)
PARENT_IDlist<-sapply(strsplit(filenamelist, "_"), "[", 1)
depthfolder<-'Inputs/Sensor_Files/'
depthfilenamelist<-list.files(depthfolder, pattern='csv')
depthPARENT_IDlist<-sapply(strsplit(depthfilenamelist, "_"), "[", 1)
#create output dataframe
SMresults <- data.frame(matrix(ncol = 11, nrow = 0))
colnames(SMresults) <- c("Parent_ID","Site_ID", "daysofdata", "ERdailymeanmean_gO2/m2day", "GPPdailymeanmean_gO2/m2day", "K600dailymeanmean_m/day","mean_depth_m","ERdailymeanmean_gO2/m3day","GPPdailymeanmean_gO2/m3day","K600vsERrsq","K600vsERp")
#start loop
for(i in 1:length(PARENT_IDlist)) {
#for(i in 1) {
data = read.csv(paste(folder,filenamelist[i],sep=''),header=T)
numdays<-length(data$ER_daily_mean[!is.na(data$ER_daily_mean)])
ERdailymeanmean<-mean(data$ER_daily_mean[!is.na(data$ER_daily_mean)])
GPPdailymeanmean<-mean(data$GPP_daily_mean[!is.na(data$GPP_daily_mean)])
K600dailymeanmean<-mean(data$K600_daily_mean[!is.na(data$K600_daily_mean)])
depthfilenumber<-which(depthPARENT_IDlist == PARENT_IDlist[i])
depthdata<-read.csv(paste(depthfolder,depthfilenamelist[depthfilenumber],sep=''),header=T,skip=8)
meandepthm<-mean(depthdata$Depth,na.rm=TRUE)
ERdailymeanmeanm3<-ERdailymeanmean/meandepthm
GPPdailymeanmeanm3<-GPPdailymeanmean/meandepthm
lmK600ER = lm(ER_daily_mean~K600_daily_mean, data = data) #Create the linear regression
K600vsERp=summary(lmK600ER)$coefficients[2,4]
K600vsERrsq=summary(lmK600ER)$r.squared
SMresults[nrow(SMresults) + 1,] = c(PARENT_IDlist[i],SITE_IDlist[i], numdays,ERdailymeanmean,GPPdailymeanmean,K600dailymeanmean,meandepthm,ERdailymeanmeanm3,GPPdailymeanmeanm3,K600vsERrsq,K600vsERp)
}
folder<-'Outputs/'
filenamelist<-list.files(folder, pattern='daily_prediction_results')
SITE_IDlist<-sapply(strsplit(filenamelist, "_"), "[", 2)
PARENT_IDlist<-sapply(strsplit(filenamelist, "_"), "[", 1)
depthfolder<-'Inputs/Sensor_Files/'
depthfilenamelist<-list.files(depthfolder, pattern='csv')
depthPARENT_IDlist<-sapply(strsplit(depthfilenamelist, "_"), "[", 1)
#create output dataframe
SMresults <- data.frame(matrix(ncol = 11, nrow = 0))
colnames(SMresults) <- c("Parent_ID","Site_ID", "daysofdata", "ERdailymeanmean_gO2/m2day", "GPPdailymeanmean_gO2/m2day", "K600dailymeanmean_m/day","mean_depth_m","ERdailymeanmean_gO2/m3day","GPPdailymeanmean_gO2/m3day","K600vsERrsq","K600vsERp")
i = 1
#for(i in 1) {
data = read.csv(paste(folder,filenamelist[i],sep=''),header=T)
numdays<-length(data$ER_daily_mean[!is.na(data$ER_daily_mean)])
ERdailymeanmean<-mean(data$ER_daily_mean[!is.na(data$ER_daily_mean)])
GPPdailymeanmean<-mean(data$GPP_daily_mean[!is.na(data$GPP_daily_mean)])
K600dailymeanmean<-mean(data$K600_daily_mean[!is.na(data$K600_daily_mean)])
depthfilenumber<-which(depthPARENT_IDlist == PARENT_IDlist[i])
depthdata<-read.csv(paste(depthfolder,depthfilenamelist[depthfilenumber],sep=''),header=T,skip=8)
paste(depthfolder,depthfilenamelist[depthfilenumber],sep='')
which(depthPARENT_IDlist == PARENT_IDlist[i])
PARENT_IDlist[i]
PARENT_IDlist[i]
sapply(strsplit(depthfilenamelist, "v2_"), "[", 1)
sapply(strsplit(depthfilenamelist, "_v2"), "[", 1)
grep("^SSS\\d*", depthfilenamelist, value = TRUE)
depthfilenamelist
grep("^SSS\\d*", depthfilenamelist)
grep("^SSS.*", depthfilenamelist)
str_extract(depthfilenamelist,"^SSS.*")
str_extract(depthfilenamelist,"SSS.*")
str_extract(depthfilenamelist,"SSS(\\d+).*")
str_extract(depthfilenamelist,"SSS(\\d+)"
)
depthPARENT_IDlist<- str_extract(depthfilenamelist,"SSS(\\d+)")
#create output dataframe
SMresults <- data.frame(matrix(ncol = 11, nrow = 0))
colnames(SMresults) <- c("Parent_ID","Site_ID", "daysofdata", "ERdailymeanmean_gO2/m2day", "GPPdailymeanmean_gO2/m2day", "K600dailymeanmean_m/day","mean_depth_m","ERdailymeanmean_gO2/m3day","GPPdailymeanmean_gO2/m3day","K600vsERrsq","K600vsERp")
#for(i in 1) {
data = read.csv(paste(folder,filenamelist[i],sep=''),header=T)
numdays<-length(data$ER_daily_mean[!is.na(data$ER_daily_mean)])
ERdailymeanmean<-mean(data$ER_daily_mean[!is.na(data$ER_daily_mean)])
GPPdailymeanmean<-mean(data$GPP_daily_mean[!is.na(data$GPP_daily_mean)])
K600dailymeanmean<-mean(data$K600_daily_mean[!is.na(data$K600_daily_mean)])
depthfilenumber<-which(depthPARENT_IDlist == PARENT_IDlist[i])
depthdata<-read.csv(paste(depthfolder,depthfilenamelist[depthfilenumber],sep=''),header=T,skip=8)
getwd()
paste(depthfolder,depthfilenamelist[depthfilenumber],sep='')
paste(depthfolder,depthfilenamelist[depthfilenumber],sep='')
depthfilenamelist[depthfilenumber]
depthfilenumber
depthPARENT_IDlist
PARENT_IDlist[i]
SITE_IDlist
PARENT_IDlist
filenamelist
sapply(strsplit(filenamelist, "_"), "[", 3)
SITE_IDlist<-sapply(strsplit(filenamelist, "_"), "[", 3)
PARENT_IDlist<-sapply(strsplit(filenamelist, "_"), "[", 2)
sapply(strsplit(depthfilenamelist, "_"), "[", 2)
depthPARENT_IDlist<-  sapply(strsplit(depthfilenamelist, "_"), "[", 2)
folder<-'Outputs/'
filenamelist<-list.files(folder, pattern='daily_prediction_results')
SITE_IDlist<-sapply(strsplit(filenamelist, "_"), "[", 3)
PARENT_IDlist<-sapply(strsplit(filenamelist, "_"), "[", 2)
depthfolder<-'Inputs/Sensor_Files/'
depthfilenamelist<-list.files(depthfolder, pattern='csv')
depthPARENT_IDlist<-  sapply(strsplit(depthfilenamelist, "_"), "[", 2)
#create output dataframe
SMresults <- data.frame(matrix(ncol = 11, nrow = 0))
colnames(SMresults) <- c("Parent_ID","Site_ID", "daysofdata", "ERdailymeanmean_gO2/m2day", "GPPdailymeanmean_gO2/m2day", "K600dailymeanmean_m/day","mean_depth_m","ERdailymeanmean_gO2/m3day","GPPdailymeanmean_gO2/m3day","K600vsERrsq","K600vsERp")
#for(i in 1) {
data = read.csv(paste(folder,filenamelist[i],sep=''),header=T)
numdays<-length(data$ER_daily_mean[!is.na(data$ER_daily_mean)])
ERdailymeanmean<-mean(data$ER_daily_mean[!is.na(data$ER_daily_mean)])
GPPdailymeanmean<-mean(data$GPP_daily_mean[!is.na(data$GPP_daily_mean)])
K600dailymeanmean<-mean(data$K600_daily_mean[!is.na(data$K600_daily_mean)])
depthfilenumber<-which(depthPARENT_IDlist == PARENT_IDlist[i])
depthdata<-read.csv(paste(depthfolder,depthfilenamelist[depthfilenumber],sep=''),header=T,skip=8)
meandepthm<-mean(depthdata$Depth,na.rm=TRUE)
ERdailymeanmeanm3<-ERdailymeanmean/meandepthm
GPPdailymeanmeanm3<-GPPdailymeanmean/meandepthm
lmK600ER = lm(ER_daily_mean~K600_daily_mean, data = data) #Create the linear regression
K600vsERp=summary(lmK600ER)$coefficients[2,4]
K600vsERrsq=summary(lmK600ER)$r.squared
SMresults[nrow(SMresults) + 1,] = c(PARENT_IDlist[i],SITE_IDlist[i], numdays,ERdailymeanmean,GPPdailymeanmean,K600dailymeanmean,meandepthm,ERdailymeanmeanm3,GPPdailymeanmeanm3,K600vsERrsq,K600vsERp)
