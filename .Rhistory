metadata_file <- 'Z:/00_Cross-SFA_ESSDIVE-Data-Package-Upload/01_Study-Data-Package-Folders/00_ARCHIVE-WHEN-PUBLISHED/SFA_SpatialStudy_2021_SensorData_v2/SFA_SpatialStudy_2021_SensorData_v2/SPS_Sensor_Field_Metadata.csv'
data_dir <- 'Z:/RC2/04_Spatial_Study_2021/03_MinidotManualChamber2hr'
data_files <- list.files(paste0(data_dir, '/01_RawData'), full.names = T)
metadata <- read_csv(metadata_file)
site_IDs <- metadata$Site_ID
site_ID <- site_IDs[1]
kit_metadata <- metadata %>%
filter(Site_ID == site_ID)
View(kit_metadata)
unlist(str_split(kit_metadata$MiniDot_SN, '_'))
sn_2 <- unlist(str_split(kit_metadata$MiniDot_SN, '_'))[2]
sn_3 <- unlist(str_split(kit_metadata$MiniDot_SN, '_'))[3]
sn_1 <- unlist(str_split(kit_metadata$MiniDot_SN, '_'))[1]
file_1 <- data_files[grepl(sn_1,data_files)]
data_files
data_files <- list.files(paste0(data_dir, '/01_RawData'), full.names = T, recursive = T)
file_1 <- data_files[grepl(sn_1,data_files)]
file_1
kit_metadata$Date
metadata_filter <- metadata %>%
filter(Site_ID == site_ID)
files_filt <- data_files[grepl(metadata_filter$Date,data_files)]
files_filt
files_filter <- data_files[grepl(metadata_filter$Date,data_files)]
file_1 <- files_filter[grepl(sn_1,files_filter)]
file_2 <- files_filter[grepl(sn_2,files_filter)]
file_3 <- files_filter[grepl(sn_3,files_filter)]
data_1 <- files_filter[grepl(sn_1,files_filter)] %>%
read_csv()
View(data_1)
data_1 <- files_filter[grepl(sn_1,files_filter)] %>%
read_csv(., skip = 2)
View(data_1)
data_2 <- files_filter[grepl(sn_2,files_filter)] %>%
read_csv(., skip = 2)
data_3 <- files_filter[grepl(sn_3,files_filter)] %>%
read_csv(., skip = 2)
rm(list=ls(all=TRUE))
# ==============================================================================
library(tidyverse)
library(lubridate)
# ================================= User inputs ================================
metadata_file <- 'Z:/00_Cross-SFA_ESSDIVE-Data-Package-Upload/01_Study-Data-Package-Folders/00_ARCHIVE-WHEN-PUBLISHED/SFA_SpatialStudy_2021_SensorData_v2/SFA_SpatialStudy_2021_SensorData_v2/SPS_Sensor_Field_Metadata.csv'
data_dir <- 'Z:/RC2/04_Spatial_Study_2021/03_MinidotManualChamber2hr'
# ================================= find files ================================
metadata <- read_csv(metadata_file)
data_files <- list.files(paste0(data_dir, '/01_RawData'), full.names = T, recursive = T)
site_IDs <- metadata$Site_ID
rm(list=ls(all=TRUE))
# ==============================================================================
library(tidyverse)
library(lubridate)
# ================================= User inputs ================================
metadata_file <- 'Z:/00_Cross-SFA_ESSDIVE-Data-Package-Upload/01_Study-Data-Package-Folders/00_ARCHIVE-WHEN-PUBLISHED/SFA_SpatialStudy_2021_SensorData_v2/SFA_SpatialStudy_2021_SensorData_v2/SPS_Sensor_Field_Metadata.csv'
data_dir <- 'Z:/RC2/04_Spatial_Study_2021/03_MinidotManualChamber2hr'
# ================================= find files ================================
metadata <- read_csv(metadata_file)
data_files <- list.files(paste0(data_dir, '/01_RawData'), full.names = T, recursive = T)
site_IDs <- metadata$Site_ID
site_ID <- site_IDs[1]
metadata_filter <- metadata %>%
filter(Site_ID == site_ID)
sn_1 <- unlist(str_split(metadata_filter$MiniDot_SN, '_'))[1]
sn_2 <- unlist(str_split(metadata_filter$MiniDot_SN, '_'))[2]
sn_3 <- unlist(str_split(metadata_filter$MiniDot_SN, '_'))[3]
files_filter <- data_files[grepl(metadata_filter$Date,data_files)]
data_1 <- files_filter[grepl(sn_1,files_filter)] %>%
read_csv(., skip = 2)
data_2 <- files_filter[grepl(sn_2,files_filter)] %>%
read_csv(., skip = 2)
data_3 <- files_filter[grepl(sn_3,files_filter)] %>%
read_csv(., skip = 2)
date <- metadata_filter$Date
DO_offset_file <- 'Z:/RC2/01_Sensor_Calibration_and_Correction_Files/01_Minidot.bucket/05_MiniDotCorrectionFactors/minidot_correction_factors_2024-02-21.csv'
DO_offset_1 <- read_csv(DO_offset_file) %>%
filter(serial_number == sn_1,
mdy(test_date) < as_datetime(date)) %>%
tail(1) %>%
select(mean_data_correction_factor) %>%
pull()
DO_offset_1 <- read_csv(DO_offset_file) %>%
filter(serial_number == sn_1,
mdy(test_date) < as_datetime(date)) %>%
tail(1) %>%
select(mean_data_correction_factor) %>%
pull()
DO_offset_2 <- read_csv(DO_offset_file) %>%
filter(serial_number == sn_2,
mdy(test_date) < as_datetime(date)) %>%
tail(1) %>%
select(mean_data_correction_factor) %>%
pull()
DO_offset_3 <- read_csv(DO_offset_file) %>%
filter(serial_number == sn_3,
mdy(test_date) < as_datetime(date)) %>%
tail(1) %>%
select(mean_data_correction_factor) %>%
pull()
files_filter <- data_files[grepl(metadata_filter$Date,data_files)]
data_1 <- files_filter[grepl(sn_1,files_filter)] %>%
read_csv(., skip = 2)%>%
mutate(DO_offset = combined$`DO (mg/l)` * DO_offset_1)
data_2 <- files_filter[grepl(sn_2,files_filter)] %>%
read_csv(., skip = 2)%>%
mutate(DO_offset = combined$`DO (mg/l)` * DO_offset_2)
data_3 <- files_filter[grepl(sn_3,files_filter)] %>%
read_csv(., skip = 2)%>%
mutate(DO_offset = combined$`DO (mg/l)` * DO_offset_3)
DO_offset_file <- 'Z:/RC2/01_Sensor_Calibration_and_Correction_Files/01_Minidot.bucket/05_MiniDotCorrectionFactors/minidot_correction_factors_2024-02-21.csv'
DO_offset_1 <- read_csv(DO_offset_file) %>%
filter(serial_number == sn_1,
mdy(test_date) < as_datetime(date)) %>%
tail(1) %>%
select(mean_data_correction_factor) %>%
pull()
DO_offset_1 <- read_csv(DO_offset_file) %>%
filter(serial_number == sn_1,
mdy(test_date) < as_datetime(date)) %>%
tail(1) %>%
select(mean_data_correction_factor) %>%
pull()
sn_1
DO_offset_1 <- read_csv(DO_offset_file)
DO_offset_1 <- read_csv(DO_offset_file) %>%
filter(serial_number == sn_1
)
DO_offset_1 <- read_csv(DO_offset_file)
View(DO_offset_1)
DO_offset_1 <- read_csv(DO_offset_file) %>%
filter(serial_number == paste0('7450-', sn_1),
mdy(test_date) < as_datetime(date)) %>%
tail(1) %>%
select(mean_data_correction_factor) %>%
pull()
paste0('7450-', sn_1)
DO_offset_1 <- read_csv(DO_offset_file) %>%
filter(serial_number == paste0('7450-', sn_1)
)
View(DO_offset_1)
DO_offset_2 <- read_csv(DO_offset_file) %>%
filter(serial_number == sn_2,
mdy(test_date) < as_datetime(date)) %>%
tail(1) %>%
select(mean_data_correction_factor) %>%
pull()
DO_offset_3 <- read_csv(DO_offset_file) %>%
filter(serial_number == sn_3,
mdy(test_date) < as_datetime(date)) %>%
tail(1) %>%
select(mean_data_correction_factor) %>%
pull()
DO_offset_1 <- read_csv(DO_offset_file) %>%
filter(serial_number == paste0('7450-', sn_1),
mdy(test_date) < as_datetime(date)) %>%
tail(1) %>%
select(mean_data_correction_factor) %>%
pull()
DO_offset_1 <- read_csv(DO_offset_file) %>%
filter(serial_number == paste0('7450-', sn_1),
mdy(test_date) < as_datetime(date))
DO_offset_1 <- read_csv(DO_offset_file) %>%
filter(serial_number == paste0('7450-', sn_1),
mdy(test_date) < as_datetime(date)) %>%
tail(1) %>%
select(mean_data_correction_factor) %>%
pull()
DO_offset_2 <- read_csv(DO_offset_file)
View(DO_offset_2)
rm(list=ls(all=TRUE))
# ==============================================================================
library(tidyverse)
library(lubridate)
# ================================= User inputs ================================
metadata_file <- 'Z:/00_Cross-SFA_ESSDIVE-Data-Package-Upload/01_Study-Data-Package-Folders/00_ARCHIVE-WHEN-PUBLISHED/SFA_SpatialStudy_2021_SensorData_v2/SFA_SpatialStudy_2021_SensorData_v2/SPS_Sensor_Field_Metadata.csv'
data_dir <- 'Z:/RC2/04_Spatial_Study_2021/03_MinidotManualChamber2hr'
DO_offset_file <- 'Z:/RC2/01_Sensor_Calibration_and_Correction_Files/01_Minidot.bucket/05_MiniDotCorrectionFactors/minidot_correction_factors_2024-02-21.csv'
temp_data <- 'Z:\00_Cross-SFA_ESSDIVE-Data-Package-Upload\01_Study-Data-Package-Folders\SFA_SpatialStudy_2021_SensorData_v3\v3_SFA_SpatialStudy_2021_SensorData\MinidotManualChamber\Data'
baro_file_dir <- ''
# ================================= find files ================================
metadata <- read_csv(metadata_file)
data_files <- list.files(paste0(data_dir, '/01_RawData'), full.names = T, recursive = T)
site_IDs <- metadata$Site_ID
data_combined <- read_csv(temp_data, comment = '#')
baro_files <- list.files(baro_file_dir, full.names = T, recursive = T)
baro_file_dir
temp_data <- 'Z:/00_Cross-SFA_ESSDIVE-Data-Package-Upload/01_Study-Data-Package-Folders/SFA_SpatialStudy_2021_SensorData_v3/v3_SFA_SpatialStudy_2021_SensorData/MinidotManualChamber/Data'
baro_file_dir <- 'Z:/00_Cross-SFA_ESSDIVE-Data-Package-Upload/01_Study-Data-Package-Folders/SFA_SpatialStudy_2021_SensorData_v3/v3_SFA_SpatialStudy_2021_SensorData/BarotrollAtm/Data'
baro_files <- list.files(baro_file_dir, full.names = T, recursive = T)
site_ID <- site_IDs[1]
data_combined <- read_csv(temp_data, comment = '#')
temp_file <- temp_data[grepl(site_ID,temp_data)]
site_ID
temp_data
temp_files <- list.files(temp_data, full.names = T, recursive = T)
temp_file <- temp_files[grepl(site_ID,temp_files)]
temp_file
data_1 <- temp_file[1]%>%
read_csv()
View(data_1)
data_1 <- temp_file[1]%>%
read_csv(comment = '#')
View(data_1)
data_1 <- temp_file[1]%>%
read_csv(comment = '#')
data_2 <- temp_file[2]%>%
read_csv(comment = '#')
data_2 <- temp_file[3]%>%
read_csv(comment = '#')
data_2 <- temp_file[2]%>%
read_csv(comment = '#')
data_3 <- temp_file[3]%>%
read_csv(comment = '#')
View(data_1)
View(data_2)
View(data_3)
data_1 <- temp_file[1]%>%
read_csv(comment = '#') %>%
mutate(Dissolved_Oxygen_Saturation = NA)
View(data_1)
library(streamMetabolizer)
baro_file <- baro_files[grepl(site_ID,baro_files)]
baro_data <- baro_files[grepl(site_ID,baro_files)] %>%
read_csv(comment = '#')
View(baro_data)
View(data_1)
data_1 <- temp_file[1]%>%
read_csv(comment = '#') %>%
left_join(baro_data)
View(baro_data)
baro_data <- baro_files[grepl(site_ID,baro_files)] %>%
read_csv(comment = '#') %>%
select(-Air_Temperature)
data_1 <- temp_file[1]%>%
read_csv(comment = '#') %>%
left_join(baro_data)
data_1 <- temp_file[1]%>%
read_csv(comment = '#') %>%
left_join(baro_data) %>%
mutate(DO_sat = calc_DO_sat(Temperature, Pressure, model = "garcia-benson"), #Pressure is from baro and in mbar. Temperature is from minidot and in degC
DO_perc_sat = 100 * (DO_mg_l/DO_sat))
data_1 <- temp_file[1]%>%
read_csv(comment = '#') %>%
left_join(baro_data) %>%
mutate(DO_sat = calc_DO_sat(Temperature, Pressure, model = "garcia-benson"), #Pressure is from baro and in mbar. Temperature is from minidot and in degC
DO_perc_sat = 100 * (Dissolved_Oxygen/DO_sat))
plot(data_1$Dissolved_Oxygen_Saturation, data_1$DO_perc_sat)
plot <- ggplot(data = data_1, aes(x = DO_perc_sat, y = Dissolved_Oxygen_Saturation)) +
geom_point()+
geom_abline(slope=1, intercept = 0, color = 'grey')
plot
plot <- ggplot(data = data_1, aes(x = DO_perc_sat, y = Dissolved_Oxygen_Saturation)) +
geom_point()+
geom_abline(slope=1, intercept = 0, color = 'red')
plot
plot <- ggplot(data = data_1, aes(x = DO_perc_sat, y = Dissolved_Oxygen_Saturation)) +
geom_point()+
geom_abline(slope=1, intercept = 0, color = 'red')+
coord_equal()
plot
plot <- ggplot(data = data_1, aes(x = DO_perc_sat, y = Dissolved_Oxygen_Saturation)) +
geom_point()+
geom_abline(slope=1, intercept = 0, color = 'red')+
lims(x = c(92, 102),
y = c(92, 102))
plot
lm(y~x, y = data_1$Dissolved_Oxygen_Saturation, x = data_1$DO_perc_sat)
lm(formula = data_1$Dissolved_Oxygen_Saturation ~data_1$DO_perc_sat)
summary(lm(formula = data_1$Dissolved_Oxygen_Saturation ~data_1$DO_perc_sat))
data_1 <- temp_file[1]%>%
read_csv(comment = '#') %>%
left_join(baro_data) %>%
mutate(DO_sat = calc_DO_sat(Temperature, Pressure, model = "garcia-benson"), #Pressure is from baro and in mbar. Temperature is from minidot and in degC
Dissolved_Oxygen_Saturation  = 100 * (Dissolved_Oxygen/DO_sat)) %>%
select(-Pressure, -DO_sat)
baro_header <-  baro_files[grepl(site_ID,baro_files)] %>%
read_csv() %>%
filter('#'%in% 1)
View(baro_header)
baro_header <-  baro_files[grepl(site_ID,baro_files)] %>%
read_csv(col_names = F)
baro_header <-  baro_files[grepl(site_ID,baro_files)] %>%
read_csv(col_names = F) %>%
head(6)
baro_header <-  baro_files[grepl(site_ID,baro_files)] %>%
read_csv(col_names = F) %>%
head(5)
temp_file[1]%>%
read_csv(
)
data_1 <- temp_file[1]%>%
read_csv(col_names = F) %>% head(7)
View(data_1)
data_header <-  tibble(
header = c('# HeaderRows_8',
'# HeaderRows_Format: Column_Header; Unit; InstallationMethod_ID; Instrument_Summary',
'# DateTime; YYYY-MM-DD hh:mm:ss UTC-08:00; ManualChamberDark_01; PME MiniDOT Logger real time clock.',
'# Battery; volts; ManualChamberDark_01; PME MiniDOT Logger internal batteries.',
'# Temperature; degree_celsius; ManualChamberDark_01; PME MiniDOT Logger with temperature sensor.',
'# Dissolved_Oxygen; milligrams_per_liter; ManualChamberDark_01; PME MiniDOT Logger with optical dissolved oxygen sensor (fluorescence quenching).',
'# Dissolved_Oxygen_Saturation; percent_saturation; ManualChamberDark_01; PME MiniDOT Logger with optical dissolved oxygen sensor (fluorescence quenching).'
))
library(tools)
basename(temp_file[1])
out_path_1 <- paste0(data_dir, '/03_ProcessedData/v2_', basename(temp_file[1]))
out_path_1
write_csv(data_header, out_path_1, col_names = F, append = F)
library(tidyverse)
library(magick)
library(rsvg)
library(fs)
# ================================= User inputs ================================
photo_dir <- 'C:/Users/forb086/OneDrive - PNNL/Documents/Brieanne/temp/'
out_dir <- 'C:/Users/forb086/OneDrive - PNNL/Documents/Brieanne/temp/'
# ================================= convert photo ==============================
photos <- list.files(photo_dir, '.HEIC|.heic', full.names = T, recursive = T)
for (photo in photos) {
photo_read <- magick::image_read(photo)
file_name <- path_file(photo) %>%
str_replace(., '.heic', '.jpeg')%>%
str_replace(., '.HEIC', '.jpeg')
new_name <- paste0(out_dir, file_name)
# new_name <- photo %>%
#   str_replace(., '.heic', '.jpeg')%>%
#   str_replace(., '.HEIC', '.jpeg')
#
image_write(photo_read, new_name, format = 'jpeg')
}
library(tidyverse) #keep it tidy
library(raster) # work with rasters, NOTE: masks dplyr::select
library(janitor) # clean_names()
library(ggthemes) # theme_map()
library(ggsflabel) # add labels to sf objects
library(ggnewscale) # set multiple color scales
library(ggspatial) # add north arrow and scale bar
library(nhdplusTools) # get watershed boundary/flowlines
library(elevatr) # pull elevation maps
library(sf) # tidy spatial
library(spData)
library(cowplot)
library(rstudioapi)
library(viridis)
rm(list=ls(all=T))
# Setting wd to parent folder
current_path <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path))
setwd("./..")
metadata_file <- './Published_Data/v2_RCSFA_Geospatial_Data_Package/v2_RCSFA_Geospatial_Site_Information.csv'
shp_dir <- './Figures/Maps/YakimaRiverBasin_Boundary'
modelled_ER <- './v2_SSS_Ecosystem_Respiration_Data_Package_STAGING/v2_SSS_ER_d50_TotalOxygenConsumed.csv'
common_crs = 4326
data_file <- './Temp/SSS_Preliminary_ERwc_sed_tot.csv'
metadata <- read_csv(metadata_file) %>%
dplyr::select(Site_ID, Latitude, Longitude)
data <- read_csv(data_file, comment = '#', na = '-9999') %>%
mutate(Total_Ecosystem_Respiration_Square = case_when(Total_Ecosystem_Respiration_Square > 0 ~ NA,
TRUE ~ Total_Ecosystem_Respiration_Square))
merge <- data %>%
left_join(metadata)
YRB_shp <- list.files(shp_dir, 'shp', full.names = T)
YRB_boundary <- read_sf(YRB_shp) %>%
st_transform(common_crs)
sites <- st_as_sf(merge, coords = c('Longitude','Latitude'), crs = common_crs)
YRB_flowlines <- get_nhdplus(AOI = YRB_boundary$geometry, streamorder = 3)
elevation_raw <- get_elev_raster(YRB_boundary$geometry, z = 10)
elevation_crop <- mask(elevation_raw, YRB_boundary)
elevation <- as.data.frame(elevation_crop, xy = T) %>%
as_tibble() %>%
rename("long" = x,
"lat" = y,
"elevation" = 3) %>% #column index > name (changing resolution changes colname)
filter(!is.na(elevation))
View(data)
merge_ER <-read_csv(data) %>%
left_join(metadata) %>%
arrange(Total_Ecosystem_Respiration_Square)
merge_ER <-data %>%
left_join(metadata) %>%
arrange(Total_Ecosystem_Respiration_Square)
View(merge_ER)
View(data)
colnames(data)
merge_ER <-data %>%
left_join(metadata) %>%
arrange(ERsed)
ER_sf <- merge_ER %>%
st_as_sf(coords = c('Longitude','Latitude'), crs = common_crs)
ER_sed_obs_map <- ggplot()+
geom_sf(data = YRB_boundary)+
geom_raster(data = elevation, aes(long, lat, fill = elevation), show.legend = F, alpha = 0.4)+
scale_fill_gradient(low = 'white', high = 'black')+
geom_sf(data = YRB_flowlines, color = "royalblue", alpha = 0.8)+
new_scale_fill()+
geom_sf(data = ER_sf, aes(color = Sediment_Respiration_Square, size = Sediment_Respiration_Square), show.legend = T) +
scale_fill_viridis(option = 'B', begin = 0.3)+
scale_color_viridis(option = 'B', begin = 0.3)+
scale_size(range = c(3, 8), trans = 'reverse')+
theme_map() +
labs(x = "", y = "", color = "Sediment Respiration\n(g O2 m2 day-1)") +
ggspatial::annotation_scale(
location = "br",
pad_x = unit(0.5, "in"),
bar_cols = c("black", "white")) +
ggspatial::annotation_north_arrow(
location = "tr", which_north = "true",
pad_x = unit(2, "in"),
# pad_y = unit(0.5, "in"),
style = ggspatial::north_arrow_nautical(
fill = c("black", "white"),
line_col = "grey20"))
ggsave('./Figures/Maps/SSS_ER_Sediment_Observed_Map_Prelim.pdf',
ER_sed_obs_map,
width = 10,
height = 5
)
ER_sed_obs_map <- ggplot()+
geom_sf(data = YRB_boundary)+
geom_raster(data = elevation, aes(long, lat, fill = elevation), show.legend = F, alpha = 0.4)+
scale_fill_gradient(low = 'white', high = 'black')+
geom_sf(data = YRB_flowlines, color = "royalblue", alpha = 0.8)+
new_scale_fill()+
geom_sf(data = ER_sf, aes(color = ERsed, size = ERsed), show.legend = T) +
scale_fill_viridis(option = 'B', begin = 0.3)+
scale_color_viridis(option = 'B', begin = 0.3)+
scale_size(range = c(3, 8), trans = 'reverse')+
theme_map() +
labs(x = "", y = "", color = "Sediment Respiration\n(g O2 m2 day-1)") +
ggspatial::annotation_scale(
location = "br",
pad_x = unit(0.5, "in"),
bar_cols = c("black", "white")) +
ggspatial::annotation_north_arrow(
location = "tr", which_north = "true",
pad_x = unit(2, "in"),
# pad_y = unit(0.5, "in"),
style = ggspatial::north_arrow_nautical(
fill = c("black", "white"),
line_col = "grey20"))
ggsave('./Figures/Maps/SSS_ER_Sediment_Observed_Map_Prelim.pdf',
ER_sed_obs_map,
width = 10,
height = 5
)
merge_ER < merge_ER %>%
arrange(Water_Column_Respiration_Square)
colnames
colnames(merge_ER)
merge_ER < merge_ER %>%
arrange(ERwc_Corrected_g_per_m2_perday)
merge_ER < merge_ER %>%
arrange(ERwc_Corrected_g_per_m2_perday)
ER_sf <- merge_ER %>%
st_as_sf(coords = c('Longitude','Latitude'), crs = common_crs)
merge_ER < merge_ER %>%
arrange(ERwc_Corrected_g_per_m2_perday)
ER_sf <- merge_ER %>%
st_as_sf(coords = c('Longitude','Latitude'), crs = common_crs)
ER_wc_obs_map <- ggplot()+
geom_sf(data = YRB_boundary)+
geom_raster(data = elevation, aes(long, lat, fill = elevation), show.legend = F, alpha = 0.4)+
scale_fill_gradient(low = 'white', high = 'black')+
geom_sf(data = YRB_flowlines, color = "royalblue", alpha = 0.8)+
new_scale_fill()+
geom_sf(data = ER_sf, aes(color = Water_Column_Respiration_Square, size = Water_Column_Respiration_Square), show.legend = T) +
scale_fill_viridis(option = 'B', begin = 0.3)+
scale_color_viridis(option = 'B', begin = 0.3)+
scale_size(range = c(3, 8), trans = 'reverse')+
theme_map() +
labs(x = "", y = "", color = "Water Column\nRespiration\n(g O2 m2 day-1)") +
ggspatial::annotation_scale(
location = "br",
pad_x = unit(0.5, "in"),
bar_cols = c("black", "white")) +
ggspatial::annotation_north_arrow(
location = "tr", which_north = "true",
pad_x = unit(2, "in"),
# pad_y = unit(0.5, "in"),
style = ggspatial::north_arrow_nautical(
fill = c("black", "white"),
line_col = "grey20"))
ggsave('./Figures/Maps/SSS_ER_Water_Column_Observed_Map_prelim.pdf',
ER_wc_obs_map,
width = 10,
height = 5
)
ER_wc_obs_map <- ggplot()+
geom_sf(data = YRB_boundary)+
geom_raster(data = elevation, aes(long, lat, fill = elevation), show.legend = F, alpha = 0.4)+
scale_fill_gradient(low = 'white', high = 'black')+
geom_sf(data = YRB_flowlines, color = "royalblue", alpha = 0.8)+
new_scale_fill()+
geom_sf(data = ER_sf, aes(color = ERwc_Corrected_g_per_m2_perday, size = ERwc_Corrected_g_per_m2_perday), show.legend = T) +
scale_fill_viridis(option = 'B', begin = 0.3)+
scale_color_viridis(option = 'B', begin = 0.3)+
scale_size(range = c(3, 8), trans = 'reverse')+
theme_map() +
labs(x = "", y = "", color = "Water Column\nRespiration\n(g O2 m2 day-1)") +
ggspatial::annotation_scale(
location = "br",
pad_x = unit(0.5, "in"),
bar_cols = c("black", "white")) +
ggspatial::annotation_north_arrow(
location = "tr", which_north = "true",
pad_x = unit(2, "in"),
# pad_y = unit(0.5, "in"),
style = ggspatial::north_arrow_nautical(
fill = c("black", "white"),
line_col = "grey20"))
ggsave('./Figures/Maps/SSS_ER_Water_Column_Observed_Map_prelim.pdf',
ER_wc_obs_map,
width = 10,
height = 5
)
