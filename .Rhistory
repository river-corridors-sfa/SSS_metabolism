pull(1)
LOD_dates <- read_csv(LOD_dates_file)
for (data_column in data_columns) {
analyte <- unlist(str_split(data_column, '_'))[1]
LOD_min <- LOD %>%
select(contains(analyte) & contains('LOD'), Date_start_YYYYMMDD, Date_end_YYYYMMDD) %>%
filter(Date_start_YYYYMMDD <= LOD_dates$Date_start[1] & Date_end_YYYYMMDD >= LOD_dates$Date_start[1]) %>%
pull(1)%>%
round(2)
LOD_max <- LOD %>%
select(contains(analyte) & contains('LOD'), Date_start_YYYYMMDD, Date_end_YYYYMMDD) %>%
filter(Date_start_YYYYMMDD <= LOD_dates$Date_end[1] & Date_end_YYYYMMDD >= LOD_dates$Date_end[1]) %>%
pull(1)%>%
round(2)
if(is_empty(LOD_max)){
LOD_final = -9999
cat(
red$bold(
'NO LOD\n'
)
)
} else if(LOD_min == LOD_max){
LOD_final = LOD_max
} else{
LOD_final = paste0(LOD_min[1],"-",LOD_max[1])
}
boye_file_headers <- boye_file_headers %>%
assign_in(list(data_column, 9), LOD_final)
}
}
}
# ======================== fix column headers ==============================
for (colname in data_columns) {
colnames_lookup_filter <- colnames_lookup %>%
dplyr::filter(col.in == colname)
new_name <- colnames_lookup_filter$col.out
data <- data %>%
dplyr::rename(!!new_name := all_of(colname))
boye_file_headers <- boye_file_headers %>%
dplyr::rename(!!new_name := all_of(colname))
}
# ========================== finish formatting =============================
if (material == 'Water'){
data <- data %>%
add_column(Material = 'Liquid>aqueous', .after = 'Sample_ID')%>%
add_column(Field_Name = 'N/A', .before = 'Sample_ID')
} else {
data <- data %>%
add_column(Material = material, .after = 'Sample_ID')%>%
add_column(Field_Name = 'N/A', .before = 'Sample_ID')
}
data <- data %>%
dplyr::mutate(across(everything(), as.character))%>%
dplyr::mutate(across(contains('X'), replace_na, replace = '-9999'))%>%
dplyr::mutate(across(!contains('X'), replace_na, replace = 'N/A'))%>%
arrange(Sample_ID)
data$Field_Name[1] <- '#Start_Data'
colnames(data) <- gsub('X', '', colnames(data))
colnames(boye_file_headers) <- gsub('X', '', colnames(boye_file_headers))
data[nrow(data)+1,1] = "#End_Data"
columns <- length(data)-1
header_rows <- length(boye_file_headers$Field_Name) + 1
top <- tibble('one' = as.character(),
'two' = as.numeric()) %>%
add_row(one = '#Columns',
two = columns) %>%
add_row(one = '#Header_Rows',
two = header_rows)
# =================================== Write File ===============================
out_name <- glue('{boye_dir}{study_code}_{data_type}_Boye_{Sys.Date()}.csv' )
write_csv(top, out_name, col_names = F)
write_csv(boye_file_headers, out_name, append = T, col_names = T)
write_csv(data, out_name, append = T, na = '')
}
}
# RC2 spatial study
# calculate ERwc
# X Lin Oct 30 2020
rm(list=ls(all=TRUE))
library(xlsx)
#setwd('//pnl/projects/SBR_SFA/RC2/04_Spatial_Study/02_MantaRiver/03_ProcessedData/')
#setwd('C:/Users/linx882/OneDrive - PNNL/XLin/automation of respiration calculations/RC_2/sss_data_processing/codes')
#source('./MRhelper.R')
sdir<- 'C:/Users/forb086/OneDrive - PNNL/Documents/GitHub/SSS_metabolism/'
# findir<- 'C:/Users/forb086/Downloads/v3_SSS_Data_Package/'
findir<- "C:/Users/forb086/OneDrive - PNNL/Spatial Study 2022/03_MinidotManualChamber2hr/03_ProcessedData/MinidotManualChamber_Summary_Statistics.csv"
library(tidyverse)
#setwd('//pnl/projects/SBR_SFA/RC2/04_Spatial_Study/02_MantaRiver/03_ProcessedData/')
#setwd('C:/Users/linx882/OneDrive - PNNL/XLin/automation of respiration calculations/RC_2/sss_data_processing/codes')
#source('./MRhelper.R')
sdir<- 'C:/Users/forb086/OneDrive - PNNL/Documents/GitHub/SSS_metabolism/'
# findir<- 'C:/Users/forb086/Downloads/v3_SSS_Data_Package/'
findir<- "C:/Users/forb086/OneDrive - PNNL/Spatial Study 2022/03_MinidotManualChamber2hr/03_ProcessedData/MinidotManualChamber_Summary_Statistics.csv"
##########################################################################
## DO slope
# DO_summary<-read_csv(file.path(findir,'miniDOTManualChamber/Plots_and_Summary_Statistics','SSS_Water_DO_Temp_Summary.csv'), comment='#', na = c('N/A', -9999))
DO_summary<-read_csv(findir, comment='#', na = c('N/A', -9999))
Do_slope<-DO_summary%>%select(Date,Parent_ID,Site_ID,Dissolved_Oxygen_1_Slope,
Dissolved_Oxygen_2_Slope,Dissolved_Oxygen_3_Slope,
Dissolved_Oxygen_1_NRMSE,Dissolved_Oxygen_2_NRMSE,Dissolved_Oxygen_3_NRMSE)
View(Do_slope)
for (i in c(1:3)){
k = which(Do_slope[,paste0('Dissolved_Oxygen_',i,'_NRMSE')]>0.03)
Do_slope[k,paste0('Dissolved_Oxygen_',i,'_Slope')]<-NA
}
View(Do_slope)
View(Do_slope)
Do_slope<-DO_summary%>%select(Date,Parent_ID,Site_ID,Dissolved_Oxygen_1_Slope,
Dissolved_Oxygen_2_Slope,Dissolved_Oxygen_3_Slope,
Dissolved_Oxygen_1_NRMSE,Dissolved_Oxygen_2_NRMSE,Dissolved_Oxygen_3_NRMSE)
View(Do_slope)
for (i in c(1:3)){
k = which(Do_slope[,paste0('Dissolved_Oxygen_',i,'_NRMSE')]>0.03)
Do_slope[k,paste0('Dissolved_Oxygen_',i,'_Slope')]<-NA
}
Do_slope<-DO_summary%>%select(Date,Parent_ID,Site_ID,Dissolved_Oxygen_1_Slope,
Dissolved_Oxygen_2_Slope,Dissolved_Oxygen_3_Slope,
Dissolved_Oxygen_1_NRMSE,Dissolved_Oxygen_2_NRMSE,Dissolved_Oxygen_3_NRMSE)
for (i in c(1:3)){
k = which(Do_slope[,paste0('Dissolved_Oxygen_',i,'_NRMSE')]>0.03)
Do_slope[k,paste0('Dissolved_Oxygen_',i,'_Slope')]<-NA
}
## mean_slope: milligrams_per_liter_per_minute(mg/L/min <-->g/m3/min)
Do_slope['DO_Slope_mean']<-rowMeans(Do_slope[,grep('Slope',names(Do_slope))],na.rm = TRUE)
# mean depth
mean_depth<- read_csv("C:/Users/forb086/Downloads/v2_SSS_Data_Package/v2_SSS_Water_Depth_Summary.csv")
mean_depth$mean_reach_depth_m <- mean_depth$mean_reach_depth_cm/100
colnames(mean_depth)
# mean depth
mean_depth<- read_csv("C:/Users/forb086/Downloads/v2_SSS_Data_Package/v2_SSS_Water_Depth_Summary.csv", comment = '#')
View(mean_depth)
mean_depth$mean_reach_depth_m <- mean_depth$Average_Depth/100
#
Do_slope<- merge(Do_slope,mean_depth[c("Site_ID","mean_reach_depth_m")],by=c('Site_ID'))
View(Do_slope)
# calculate ER water
Do_slope['ERwaterdaily_gO2/m2day'] <-Do_slope$DO_Slope_mean*(60*24)*Do_slope$mean_reach_depth_m
Do_slope['ERwaterdaily_gO2/m3day'] <-Do_slope$DO_Slope_mean*(60*24)
ERwater<-Do_slope[c("Site_ID",'ERwaterdaily_gO2/m2day','ERwaterdaily_gO2/m3day')]
View(ERwater)
file.path(sdir,'SM_analysis','combined_results_2023-05-16.csv')
View(Do_slope)
Do_slope<-DO_summary%>%select(Date,Parent_ID,Site_ID,Dissolved_Oxygen_1_Slope,
Dissolved_Oxygen_2_Slope,Dissolved_Oxygen_3_Slope,
Dissolved_Oxygen_1_NRMSE,Dissolved_Oxygen_2_NRMSE,Dissolved_Oxygen_3_NRMSE)
##########################################################################
## DO slope
# DO_summary<-read_csv(file.path(findir,'miniDOTManualChamber/Plots_and_Summary_Statistics','SSS_Water_DO_Temp_Summary.csv'), comment='#', na = c('N/A', -9999))
DO_summary<-read_csv(findir, comment='#', na = c('N/A', -9999))
Do_slope<-DO_summary%>%select(Date,Parent_ID,Site_ID,Dissolved_Oxygen_1_Slope,
Dissolved_Oxygen_2_Slope,Dissolved_Oxygen_3_Slope,
Dissolved_Oxygen_1_NRMSE,Dissolved_Oxygen_2_NRMSE,Dissolved_Oxygen_3_NRMSE)
# RC2 spatial study
# calculate ERwc
# X Lin Oct 30 2020
rm(list=ls(all=TRUE))
library(xlsx)
library(tidyverse)
#setwd('//pnl/projects/SBR_SFA/RC2/04_Spatial_Study/02_MantaRiver/03_ProcessedData/')
#setwd('C:/Users/linx882/OneDrive - PNNL/XLin/automation of respiration calculations/RC_2/sss_data_processing/codes')
#source('./MRhelper.R')
sdir<- 'C:/Users/forb086/OneDrive - PNNL/Documents/GitHub/SSS_metabolism/'
# findir<- 'C:/Users/forb086/Downloads/v3_SSS_Data_Package/'
findir<- "C:/Users/forb086/OneDrive - PNNL/Spatial Study 2022/03_MinidotManualChamber2hr/03_ProcessedData/MinidotManualChamber_Summary_Statistics.csv"
##########################################################################
## DO slope
# DO_summary<-read_csv(file.path(findir,'miniDOTManualChamber/Plots_and_Summary_Statistics','SSS_Water_DO_Temp_Summary.csv'), comment='#', na = c('N/A', -9999))
DO_summary<-read_csv(findir, comment='#', na = c('N/A', -9999))
Do_slope<-DO_summary%>%select(Date,Parent_ID,Site_ID,Dissolved_Oxygen_1_Slope,
Dissolved_Oxygen_2_Slope,Dissolved_Oxygen_3_Slope,
Dissolved_Oxygen_1_NRMSE,Dissolved_Oxygen_2_NRMSE,Dissolved_Oxygen_3_NRMSE)
View(Do_slope)
for (i in c(1:3)){
k = which(Do_slope[,paste0('Dissolved_Oxygen_',i,'_NRMSE')]>0.03)
Do_slope[k,paste0('Dissolved_Oxygen_',i,'_Slope')]<-NA
}
## mean_slope: milligrams_per_liter_per_minute(mg/L/min <-->g/m3/min)
Do_slope['DO_Slope_mean']<-rowMeans(Do_slope[,grep('Slope',names(Do_slope))],na.rm = TRUE)
# mean depth
mean_depth<- read_csv("C:/Users/forb086/Downloads/v2_SSS_Data_Package/v2_SSS_Water_Depth_Summary.csv", comment = '#')
mean_depth$mean_reach_depth_m <- mean_depth$Average_Depth/100
#
Do_slope<- merge(Do_slope,mean_depth[c("Site_ID","mean_reach_depth_m")],by=c('Site_ID'))
# calculate ER water
Do_slope['ERwaterdaily_gO2/m2day'] <-Do_slope$DO_Slope_mean*(60*24)*Do_slope$mean_reach_depth_m
Do_slope['ERwaterdaily_gO2/m3day'] <-Do_slope$DO_Slope_mean*(60*24)
ERwater<-Do_slope[c("Site_ID",'ERwaterdaily_gO2/m2day','ERwaterdaily_gO2/m3day')]
View(ERwater)
sdir
#########################
ERtotal <- read_csv(file.path(sdir,'/v2_SSS_Ecosystem_Respiration_Data_Package_STAGING/Outputs/','v2_SSS_combined_SM_results.csv'))
#########################
ERtotal <- read_csv(file.path(sdir,'/v2_SSS_Ecosystem_Respiration_Data_Package_STAGING/Outputs/v2_SSS_combined_SM_results.csv'))
/
#setwd('//pnl/projects/SBR_SFA/RC2/04_Spatial_Study/02_MantaRiver/03_ProcessedData/')
#setwd('C:/Users/linx882/OneDrive - PNNL/XLin/automation of respiration calculations/RC_2/sss_data_processing/codes')
#source('./MRhelper.R')
sdir<- 'C:/Brieanne/GitHub/SSS_metabolism/'
#########################
ERtotal <- read_csv(file.path(sdir,'/v2_SSS_Ecosystem_Respiration_Data_Package_STAGING/Outputs/v2_SSS_combined_SM_results.csv'))
# names(ERwater)[1]<-'SiteID'
ERtotal<-merge(ERtotal,ERwater,by=c('Site_ID'))
View(ERtotal)
#########################
ERtotal <- read_csv(file.path(sdir,'/v2_SSS_Ecosystem_Respiration_Data_Package_STAGING/Outputs/v2_SSS_combined_SM_results.csv'), na = -9999)
#########################
ERtotal <- read_csv(file.path(sdir,'/v2_SSS_Ecosystem_Respiration_Data_Package_STAGING/Outputs/v2_SSS_combined_SM_results.csv'), na = '-9999')
View(ERtotal)
# names(ERwater)[1]<-'SiteID'
ERtotal<-merge(ERtotal,ERwater,by=c('Site_ID'))
View(ERtotal)
##
#calculate ER sed
ERtotal['ERseddaily_gO2/m2day']<-ERtotal$`ERdailymeanmean_gO2/m2day`-ERtotal$`ERwaterdaily_gO2/m2day`
ERtotal['ERseddaily_gO2/m3day']<-ERtotal$`ERdailymeanmean_gO2/m3day`-ERtotal$`ERwaterdaily_gO2/m3day`
file.path(sdir,'v2_SSS_Ecosystem_Respiration_Data_Package_STAGING/Outputs/combined_results_2024-03-06.csv')
write_csv(ERtotal,file.path(sdir,'v2_SSS_Ecosystem_Respiration_Data_Package_STAGING/Outputs/ER_total_sediment_water_combined.csv'))
write_csv(ERtotal,file.path(sdir,'v2_SSS_Ecosystem_Respiration_Data_Package_STAGING/Outputs/ER_total_sediment_water_combined.csv'), na = -9999)
write_csv(ERtotal,file.path(sdir,'v2_SSS_Ecosystem_Respiration_Data_Package_STAGING/Outputs/ER_total_sediment_water_combined.csv'), na = '-9999')
header <- tibble(x1 = c('# HeaderRows_9',
'# HeaderRows_Format: Column_Header; Unit; InstallationMethod_ID; Instrument_Summary',
'# Total_Ecosystem_Respiration_Square; grams_O2_per_square_meter_per_day; N/A; Estimated via streamMetabolizer model.',
'# Total_Ecosystem_Respiration_Cubic; grams_O2_per_cubic_meter_per_day; N/A; Estimated via streamMetabolizer model.',
'# Water_Column_Respiration_Square; grams_O2_per_square_meter_per_day; ManualChamberDark_02; PME MiniDOT Logger with optical dissolved oxygen sensor (fluorescence quenching).',
'# Water_Column_Respiration_Cubic; grams_O2_per_cubic_meter_per_day; ManualChamberDark_02; PME MiniDOT Logger with optical dissolved oxygen sensor (fluorescence quenching).',
'# Sediment_Respiration_Square; grams_O2_per_square_meter_per_day; N/A; Calculated using Ecosystem Respiration from the streamMetabolizer model and Water Column Respiration from PME MiniDOT logger manual chamber.',
'# Sediment_Respiration_Cubic; grams_O2_per_cubic_meter_per_day; N/A; Calculated using Ecosystem Respiration from the streamMetabolizer model and Water Column Respiration from PME MiniDOT logger manual chamber.')
)
View(header)
rm(list=ls(all=TRUE))
library(xlsx)
library(tidyverse)
#setwd('//pnl/projects/SBR_SFA/RC2/04_Spatial_Study/02_MantaRiver/03_ProcessedData/')
#setwd('C:/Users/linx882/OneDrive - PNNL/XLin/automation of respiration calculations/RC_2/sss_data_processing/codes')
#source('./MRhelper.R')
sdir<- 'C:/Brieanne/GitHub/SSS_metabolism/'
# findir<- 'C:/Users/forb086/Downloads/v3_SSS_Data_Package/'
findir<- "C:/Users/forb086/OneDrive - PNNL/Spatial Study 2022/03_MinidotManualChamber2hr/03_ProcessedData/MinidotManualChamber_Summary_Statistics.csv"
##########################################################################
## DO slope
# DO_summary<-read_csv(file.path(findir,'miniDOTManualChamber/Plots_and_Summary_Statistics','SSS_Water_DO_Temp_Summary.csv'), comment='#', na = c('N/A', -9999))
DO_summary<-read_csv(findir, comment='#', na = c('N/A', -9999))
Do_slope<-DO_summary%>%select(Date,Parent_ID,Site_ID,Dissolved_Oxygen_1_Slope,
Dissolved_Oxygen_2_Slope,Dissolved_Oxygen_3_Slope,
Dissolved_Oxygen_1_NRMSE,Dissolved_Oxygen_2_NRMSE,Dissolved_Oxygen_3_NRMSE)
for (i in c(1:3)){
k = which(Do_slope[,paste0('Dissolved_Oxygen_',i,'_NRMSE')]>0.03)
Do_slope[k,paste0('Dissolved_Oxygen_',i,'_Slope')]<-NA
}
## mean_slope: milligrams_per_liter_per_minute(mg/L/min <-->g/m3/min)
Do_slope['DO_Slope_mean']<-rowMeans(Do_slope[,grep('Slope',names(Do_slope))],na.rm = TRUE)
# mean depth
mean_depth<- read_csv("C:/Users/forb086/Downloads/v2_SSS_Data_Package/v2_SSS_Water_Depth_Summary.csv", comment = '#')
mean_depth$mean_reach_depth_m <- mean_depth$Average_Depth/100
#
Do_slope<- merge(Do_slope,mean_depth[c("Site_ID","mean_reach_depth_m")],by=c('Site_ID'))
# calculate ER water
Do_slope['ERwaterdaily_gO2/m2day'] <-Do_slope$DO_Slope_mean*(60*24)*Do_slope$mean_reach_depth_m
Do_slope['ERwaterdaily_gO2/m3day'] <-Do_slope$DO_Slope_mean*(60*24)
ERwater<-Do_slope[c("Site_ID",'ERwaterdaily_gO2/m2day','ERwaterdaily_gO2/m3day')]
#########################
ERtotal <- read_csv(file.path(sdir,'/v2_SSS_Ecosystem_Respiration_Data_Package_STAGING/Outputs/v2_SSS_combined_SM_results.csv'), na = '-9999')
# names(ERwater)[1]<-'SiteID'
ERtotal<-merge(ERtotal,ERwater,by=c('Site_ID'))
##
#calculate ER sed
ERtotal['ERseddaily_gO2/m2day']<-ERtotal$`ERdailymeanmean_gO2/m2day`-ERtotal$`ERwaterdaily_gO2/m2day`
ERtotal['ERseddaily_gO2/m3day']<-ERtotal$`ERdailymeanmean_gO2/m3day`-ERtotal$`ERwaterdaily_gO2/m3day`
DO_summary<-read_csv(findir, comment='#', na = c('N/A', -9999))
Do_slope<-DO_summary%>%select(Date,Parent_ID,Site_ID,Dissolved_Oxygen_1_Slope,
Dissolved_Oxygen_2_Slope,Dissolved_Oxygen_3_Slope,
Dissolved_Oxygen_1_NRMSE,Dissolved_Oxygen_2_NRMSE,Dissolved_Oxygen_3_NRMSE)
for (i in c(1:3)){
k = which(Do_slope[,paste0('Dissolved_Oxygen_',i,'_NRMSE')]>0.03)
Do_slope[k,paste0('Dissolved_Oxygen_',i,'_Slope')]<-NA
}
## mean_slope: milligrams_per_liter_per_minute(mg/L/min <-->g/m3/min)
Do_slope['DO_Slope_mean']<-rowMeans(Do_slope[,grep('Slope',names(Do_slope))],na.rm = TRUE)
# mean depth
mean_depth<- read_csv("C:/Users/forb086/Downloads/v2_SSS_Data_Package/v2_SSS_Water_Depth_Summary.csv", comment = '#')
mean_depth$mean_reach_depth_m <- mean_depth$Average_Depth/100
#
Do_slope<- merge(Do_slope,mean_depth[c("Site_ID","mean_reach_depth_m")],by=c('Site_ID'))
# calculate ER water
Do_slope['ERwaterdaily_gO2/m2day'] <-Do_slope$DO_Slope_mean*(60*24)*Do_slope$mean_reach_depth_m
ERwater<-Do_slope[c("Site_ID",'ERwaterdaily_gO2/m2day')]
#########################
ERtotal <- read_csv(file.path(sdir,'/v2_SSS_Ecosystem_Respiration_Data_Package_STAGING/Outputs/v2_SSS_combined_SM_results.csv'), na = '-9999')
# names(ERwater)[1]<-'SiteID'
ERtotal<-merge(ERtotal,ERwater,by=c('Site_ID'))
##
#calculate ER sed
ERtotal['ERseddaily_gO2/m2day']<-ERtotal$`ERdailymeanmean_gO2/m2day`-ERtotal$`ERwaterdaily_gO2/m2day`
View(ERtotal)
colnames(ERtotal)
#subset to needed columns and rename
final_data <- ERtotal %>%
select("Site_ID","Parent_ID", "ERdailymeanmean_gO2/m2day", "ERwaterdaily_gO2/m2day","ERseddaily_gO2/m2day","GPPdailymeanmean_gO2/m2day") %>%
rename(Total_Ecosystem_Respiration_Square = "ERdailymeanmean_gO2/m2day",
Water_Column_Respiration_Square = "ERwaterdaily_gO2/m2day",
Sediment_Respiration_Square = "ERseddaily_gO2/m2day",
Gross_Primary_Production_Square = "GPPdailymeanmean_gO2/m2day")
View(final_data)
header <- tibble(x1 = c('# HeaderRows_9',
'# HeaderRows_Format: Column_Header; Unit; InstallationMethod_ID; Instrument_Summary',
'# Total_Ecosystem_Respiration_Square; grams_O2_per_square_meter_per_day; N/A; Estimated via streamMetabolizer model.',
'# Water_Column_Respiration_Square; grams_O2_per_square_meter_per_day; ManualChamberDark_02; PME MiniDOT Logger with optical dissolved oxygen sensor (fluorescence quenching).',
'# Sediment_Respiration_Square; grams_O2_per_square_meter_per_day; N/A; Calculated using Ecosystem Respiration from the streamMetabolizer model and Water Column Respiration from PME MiniDOT logger manual chamber.',
'# Gross_Primary_Production_Square; grams_O2_per_square_meter_per_day; N/A; Estimated via streamMetabolizer model.',)
)
header <- tibble(x1 = c('# HeaderRows_9',
'# HeaderRows_Format: Column_Header; Unit; InstallationMethod_ID; Instrument_Summary',
'# Total_Ecosystem_Respiration_Square; grams_O2_per_square_meter_per_day; N/A; Estimated via streamMetabolizer model.',
'# Water_Column_Respiration_Square; grams_O2_per_square_meter_per_day; ManualChamberDark_02; PME MiniDOT Logger with optical dissolved oxygen sensor (fluorescence quenching).',
'# Sediment_Respiration_Square; grams_O2_per_square_meter_per_day; N/A; Calculated using Ecosystem Respiration from the streamMetabolizer model and Water Column Respiration from PME MiniDOT logger manual chamber.',
'# Gross_Primary_Production_Square; grams_O2_per_square_meter_per_day; N/A; Estimated via streamMetabolizer model.')
)
write_csv(header,file.path(sdir,'v2_SSS_Ecosystem_Respiration_Data_Package_STAGING/v2_SSS_Water_Sediment_Total_Respiration_GPP.csv'), append = F, col_names = F)
write_csv(final_data,file.path(sdir,'v2_SSS_Ecosystem_Respiration_Data_Package_STAGING/v2_SSS_Water_Sediment_Total_Respiration_GPP.csv'), na = '-9999', append = T, col_names = T)
View(ERtotal)
# RC2 spatial study
# calculate ERwc
# X Lin Oct 30 2020
rm(list=ls(all=TRUE))
library(xlsx)
library(tidyverse)
#setwd('//pnl/projects/SBR_SFA/RC2/04_Spatial_Study/02_MantaRiver/03_ProcessedData/')
#setwd('C:/Users/linx882/OneDrive - PNNL/XLin/automation of respiration calculations/RC_2/sss_data_processing/codes')
#source('./MRhelper.R')
sdir<- 'C:/Brieanne/GitHub/SSS_metabolism/'
# findir<- 'C:/Users/forb086/Downloads/v3_SSS_Data_Package/'
findir<- "C:/Users/forb086/OneDrive - PNNL/Spatial Study 2022/03_MinidotManualChamber2hr/03_ProcessedData/MinidotManualChamber_Summary_Statistics.csv"
##########################################################################
## DO slope
# DO_summary<-read_csv(file.path(findir,'miniDOTManualChamber/Plots_and_Summary_Statistics','SSS_Water_DO_Temp_Summary.csv'), comment='#', na = c('N/A', -9999))
DO_summary<-read_csv(findir, comment='#', na = c('N/A', -9999))
Do_slope<-DO_summary%>%select(Date,Parent_ID,Site_ID,Dissolved_Oxygen_1_Slope,
Dissolved_Oxygen_2_Slope,Dissolved_Oxygen_3_Slope,
Dissolved_Oxygen_1_NRMSE,Dissolved_Oxygen_2_NRMSE,Dissolved_Oxygen_3_NRMSE)
for (i in c(1:3)){
k = which(Do_slope[,paste0('Dissolved_Oxygen_',i,'_NRMSE')]>0.03)
Do_slope[k,paste0('Dissolved_Oxygen_',i,'_Slope')]<-NA
}
## mean_slope: milligrams_per_liter_per_minute(mg/L/min <-->g/m3/min)
Do_slope['DO_Slope_mean']<-rowMeans(Do_slope[,grep('Slope',names(Do_slope))],na.rm = TRUE)
# mean depth
mean_depth<- read_csv("C:/Users/forb086/Downloads/v2_SSS_Data_Package/v2_SSS_Water_Depth_Summary.csv", comment = '#')
mean_depth$mean_reach_depth_m <- mean_depth$Average_Depth/100
#
Do_slope<- merge(Do_slope,mean_depth[c("Site_ID","mean_reach_depth_m")],by=c('Site_ID'))
Do_slope<-DO_summary%>%select(Date,Parent_ID,Site_ID,Dissolved_Oxygen_1_Slope,
Dissolved_Oxygen_2_Slope,Dissolved_Oxygen_3_Slope,
Dissolved_Oxygen_1_NRMSE,Dissolved_Oxygen_2_NRMSE,Dissolved_Oxygen_3_NRMSE)
for (i in c(1:3)){
k = which(Do_slope[,paste0('Dissolved_Oxygen_',i,'_NRMSE')]>0.03)
Do_slope[k,paste0('Dissolved_Oxygen_',i,'_Slope')]<-NA
}
View(Do_slope)
source("C:/Brieanne/GitHub/SSS_metabolism/Code/SSS_Calculate_ER_water_columns_BF.R", echo=TRUE)
source("C:/Brieanne/GitHub/SSS_metabolism/Code/SSS_Calculate_ER_water_columns_BF.R", echo=TRUE)
#subset to needed columns, rename, and round
final_data <- ERtotal %>%
select("Site_ID","Parent_ID", "ERdailymeanmean_gO2/m2day", "ERwaterdaily_gO2/m2day","ERseddaily_gO2/m2day","GPPdailymeanmean_gO2/m2day") %>%
rename(Total_Ecosystem_Respiration_Square = "ERdailymeanmean_gO2/m2day",
Water_Column_Respiration_Square = "ERwaterdaily_gO2/m2day",
Sediment_Respiration_Square = "ERseddaily_gO2/m2day",
Gross_Primary_Production_Square = "GPPdailymeanmean_gO2/m2day") %>%
mutate(Total_Ecosystem_Respiration_Square = round(Total_Ecosystem_Respiration_Square, 2),
Water_Column_Respiration_Square = signif(Water_Column_Respiration_Square, 3),
Sediment_Respiration_Square = round(Sediment_Respiration_Square, 2),
Gross_Primary_Production_Square = round(Gross_Primary_Production_Square, 2))
View(final_data)
header <- tibble(x1 = c('# HeaderRows_7',
'# HeaderRows_Format: Column_Header; Unit; InstallationMethod_ID; Instrument_Summary',
'# Total_Ecosystem_Respiration_Square; grams_O2_per_square_meter_per_day; N/A; Estimated via streamMetabolizer model.',
'# Water_Column_Respiration_Square; grams_O2_per_square_meter_per_day; ManualChamberDark_02; PME MiniDOT Logger with optical dissolved oxygen sensor (fluorescence quenching).',
'# Sediment_Respiration_Square; grams_O2_per_square_meter_per_day; N/A; Calculated using Ecosystem Respiration from the streamMetabolizer model and Water Column Respiration from PME MiniDOT logger manual chamber.',
'# Gross_Primary_Production_Square; grams_O2_per_square_meter_per_day; N/A; Estimated via streamMetabolizer model.')
)
write_csv(header,file.path(sdir,'v2_SSS_Ecosystem_Respiration_Data_Package_STAGING/v2_SSS_Water_Sediment_Total_Respiration_GPP.csv'), append = F, col_names = F)
write_csv(final_data,file.path(sdir,'v2_SSS_Ecosystem_Respiration_Data_Package_STAGING/v2_SSS_Water_Sediment_Total_Respiration_GPP.csv'), na = '-9999', append = T, col_names = T)
library(tidyverse) #keep it tidy
library(raster) # work with rasters, NOTE: masks dplyr::select
library(janitor) # clean_names()
library(ggthemes) # theme_map()
library(ggsflabel) # add labels to sf objects
library(ggnewscale) # set multiple color scales
library(ggspatial) # add north arrow and scale bar
library(nhdplusTools) # get watershed boundary/flowlines
library(elevatr) # pull elevation maps
library(sf) # tidy spatial
library(spData)
library(cowplot)
library(rstudioapi)
library(viridis)
rm(list=ls(all=T))
# Setting wd to parent folder
current_path <- rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path))
setwd("./..")
# ================================= User inputs ================================
metadata_file <- './Published_Data/v2_RCSFA_Geospatial_Data_Package/v2_RCSFA_Geospatial_Site_Information.csv'
data_file <- './v2_SSS_Ecosystem_Respiration_Data_Package_STAGING/v2_SSS_Water_Sediment_Total_Respiration_GPP.csv'
shp_dir <- './Figures/Maps/YakimaRiverBasin_Boundary'
modelled_ER <- './v2_SSS_Ecosystem_Respiration_Data_Package_STAGING/v2_SSS_ER_d50_TotalOxygenConsumed.csv'
common_crs = 4326
# ============================== read in and merge =============================
metadata <- read_csv(metadata_file) %>%
dplyr::select(Site_ID, Latitude, Longitude)
data <- read_csv(data_file, comment = '#', na = '-9999') %>%
mutate(Total_Ecosystem_Respiration_Square = case_when(Total_Ecosystem_Respiration_Square > 0 ~ NA,
TRUE ~ Total_Ecosystem_Respiration_Square))
merge <- data %>%
left_join(metadata)
# ============================ read in YRB shp file ============================
YRB_shp <- list.files(shp_dir, 'shp', full.names = T)
YRB_boundary <- read_sf(YRB_shp) %>%
st_transform(common_crs)
# ============================ convert to sf object ============================
sites <- st_as_sf(merge, coords = c('Longitude','Latitude'), crs = common_crs)
# ======================== pull NHD data and elevation =========================
YRB_flowlines <- get_nhdplus(AOI = YRB_boundary$geometry, streamorder = 3)
elevation_raw <- get_elev_raster(YRB_boundary$geometry, z = 10)
elevation_crop <- mask(elevation_raw, YRB_boundary)
elevation <- as.data.frame(elevation_crop, xy = T) %>%
as_tibble() %>%
rename("long" = x,
"lat" = y,
"elevation" = 3) %>% #column index > name (changing resolution changes colname)
filter(!is.na(elevation))
# ============================= create map of sites ===========================
merge_ER <-data %>%
full_join(read_csv(modelled_ER, comment = '#', na = '-9999')) %>%
left_join(metadata) %>%
arrange(Total_Ecosystem_Respiration_Square)
merge_ER < merge_ER %>%
arrange(Water_Column_Respiration_Square)
ER_sf <- merge_ER %>%
st_as_sf(coords = c('Longitude','Latitude'), crs = common_crs)
ER_wc_obs_map <- ggplot()+
geom_sf(data = YRB_boundary)+
geom_raster(data = elevation, aes(long, lat, fill = elevation), show.legend = F, alpha = 0.4)+
scale_fill_gradient(low = 'white', high = 'black')+
geom_sf(data = YRB_flowlines, color = "royalblue", alpha = 0.8)+
new_scale_fill()+
geom_sf(data = ER_sf, aes(color = Water_Column_Respiration_Square, size = Water_Column_Respiration_Square), show.legend = T) +
scale_fill_viridis(option = 'B', begin = 0.3)+
scale_color_viridis(option = 'B', begin = 0.3)+
scale_size(range = c(3, 8), trans = 'reverse')+
theme_map() +
labs(x = "", y = "", color = "Water Column\nRespiration\n(g O2 m2 day-1)") +
ggspatial::annotation_scale(
location = "br",
pad_x = unit(0.5, "in"),
bar_cols = c("black", "white")) +
ggspatial::annotation_north_arrow(
location = "tr", which_north = "true",
pad_x = unit(2, "in"),
# pad_y = unit(0.5, "in"),
style = ggspatial::north_arrow_nautical(
fill = c("black", "white"),
line_col = "grey20"))
ggsave('./Figures/Maps/SSS_ER_Water_Column_Observed_Map.pdf',
ER_water_obs_map,
width = 10,
height = 5
)
ggsave('./Figures/Maps/SSS_ER_Water_Column_Observed_Map.pdf',
ER_wc_obs_map,
width = 10,
height = 5
)
merge_ER <-data %>%
full_join(read_csv(modelled_ER, comment = '#', na = '-9999')) %>%
left_join(metadata) %>%
arrange(Total_Ecosystem_Respiration_Square)
merge_ER < merge_ER %>%
mutate(Water_Column_Respiration_Square_Z = c(scale(Water_Column_Respiration_Square, center = TRUE, scale = TRUE))) %>%
arrange(Water_Column_Respiration_Square_Z)
merge_ER <- merge_ER %>%
mutate(Water_Column_Respiration_Square_Z = c(scale(Water_Column_Respiration_Square, center = TRUE, scale = TRUE))) %>%
arrange(Water_Column_Respiration_Square_Z)
ER_sf <- merge_ER %>%
st_as_sf(coords = c('Longitude','Latitude'), crs = common_crs)
ER_wc_obs_map <- ggplot()+
geom_sf(data = YRB_boundary)+
geom_raster(data = elevation, aes(long, lat, fill = elevation), show.legend = F, alpha = 0.4)+
scale_fill_gradient(low = 'white', high = 'black')+
geom_sf(data = YRB_flowlines, color = "royalblue", alpha = 0.8)+
new_scale_fill()+
geom_sf(data = ER_sf, aes(color = Water_Column_Respiration_Square_Z, size = Water_Column_Respiration_Square_Z), show.legend = T) +
scale_fill_viridis(option = 'B', begin = 0.3)+
scale_color_viridis(option = 'B', begin = 0.3)+
scale_size(range = c(3, 8), trans = 'reverse')+
theme_map() +
labs(x = "", y = "", color = "Normalized Water Column\nRespiration") +
ggspatial::annotation_scale(
location = "br",
pad_x = unit(0.5, "in"),
bar_cols = c("black", "white")) +
ggspatial::annotation_north_arrow(
location = "tr", which_north = "true",
pad_x = unit(2, "in"),
# pad_y = unit(0.5, "in"),
style = ggspatial::north_arrow_nautical(
fill = c("black", "white"),
line_col = "grey20"))
ggsave('./Figures/Maps/SSS_ER_Water_Column_Observed_Map_ZScores.pdf',
ER_wc_obs_map,
width = 10,
height = 5
)
