Specific_Conductance_Mean = round(mean(Specific_Conductance, na.rm = T), 2),
Specific_Conductance_Range = round(diff(range(Specific_Conductance, na.rm = T)), 2),
pH_Slope = signif(coef(pH_lm)[2], 3),
pH_Rsquared = round(summary(pH_lm)$r.squared, 2),
pH_RMSE = signif(sqrt(mean(pH_lm$residuals^2)), 2),
pH_Mean = round(mean(pH, na.rm = T), 2),
pH_Range = round(diff(range(pH, na.rm = T)), 2))
View(baro_summary_row)
colnames(manta_summary)
baro_summary <- baro_data %>%
summarize(Site_ID = as.character(),
Date = ymd(),
Pressure_Slope = as.numeric(),
Pressure_Rsquared = as.numeric(),
Pressure_RMSE = as.numeric(),
Pressure_Mean = as.numeric(),
Pressure_Range = as.numeric(),
Air_Temperature_Slope = as.numeric(),
Air_Temperature_Rsquared = as.numeric(),
Air_Temperature_RMSE = as.numeric(),
Air_Temperature_Mean = as.numeric(),
Air_Temperature_Range = as.numeric())
manta_summary_row <- manta_data %>%
summarize(Site_ID = as.character(),
Date = ymd(),
Temperature_Slope = as.numeric(),
Temperature_Rsquared = as.numeric(),
Temperature_RMSE = as.numeric(),
Temperature_Mean = as.numeric(),
Temperature_Range = as.numeric(),
Specific_Conductance_Slope = as.numeric(),
Specific_Conductance_Rsquared = as.numeric(),
Specific_Conductance_RMSE = as.numeric(),
Specific_Conductance_Mean = as.numeric(),
Specific_Conductance_Range = as.numeric(),
pH_Slope = as.numeric(),
pH_Rsquared = as.numeric(),
pH_RMSE = as.numeric(),
pH_Mean = as.numeric(),
pH_Range = as.numeric())
colnames(manta_summary_row)
manta_summary_out <- manta_summary %>%
mutate(Date = as.character(paste(' ', Date)))%>%
mutate_all(~ifelse(is.na(.), -9999, .)) %>%
add_row(-9999)
manta_summary <- manta_data %>%
summarize(Site_ID = as.character(),
Date = ymd(),
Temperature_Slope = as.numeric(),
Temperature_Rsquared = as.numeric(),
Temperature_RMSE = as.numeric(),
Temperature_Mean = as.numeric(),
Temperature_Range = as.numeric(),
Specific_Conductance_Slope = as.numeric(),
Specific_Conductance_Rsquared = as.numeric(),
Specific_Conductance_RMSE = as.numeric(),
Specific_Conductance_Mean = as.numeric(),
Specific_Conductance_Range = as.numeric(),
pH_Slope = as.numeric(),
pH_Rsquared = as.numeric(),
pH_RMSE = as.numeric(),
pH_Mean = as.numeric(),
pH_Range = as.numeric())
manta_summary_out <- manta_summary %>%
mutate(Date = as.character(paste(' ', Date)))%>%
mutate_all(~ifelse(is.na(.), -9999, .)) %>%
add_row(-9999)
manta_summary_out <- manta_summary %>%
mutate(Date = as.character(paste(' ', Date)))%>%
mutate_all(~ifelse(is.na(.), -9999, .)) %>%
add_row(c('U20', '-9999', -9999, -9999, -9999))
colnames(manta_summary)
manta_summary_out <- manta_summary %>%
mutate(Date = as.character(paste(' ', Date)))%>%
mutate_all(~ifelse(is.na(.), -9999, .)) %>%
add_row(Site_ID ='U20',
Date = '-9999',
Temperature_Slope = -9999,
Temperature_Rsquared = -9999,
Temperature_RMSE =-9999)
manta_summary_out <- manta_summary %>%
mutate(Date = as.character(paste(' ', Date)))%>%
mutate_all(~ifelse(is.na(.), -9999, .))
manta_summary_out <- manta_summary %>%
mutate(Date = as.character(paste(' ', Date)))%>%
mutate_all(~ifelse(is.na(.), -9999, .)) %>%
add_row(Site_ID ='U20'
)
View(baro_summary_row)
manta_summary <- manta_summary %>%
add_row(manta_summary_row)
manta_summary_out <- manta_summary %>%
mutate(Date = as.character(paste(' ', Date)))%>%
mutate_all(~ifelse(is.na(.), -9999, .)) %>%
add_row(Site_ID ='U20',
Date = '-9999',
Temperature_Slope = -9999,
Temperature_Rsquared = -9999,
Temperature_RMSE =-9999)
manta_summary_row <- manta_data %>%
summarize(Site_ID = unique(Site_ID),
Date = unique(as.Date(DateTime)),
Temperature_Slope = signif(coef(manta_temp_lm)[2], 3),
Temperature_Rsquared = round(summary(manta_temp_lm)$r.squared, 2),
Temperature_RMSE = signif(sqrt(mean(manta_temp_lm$residuals^2)), 2),
Temperature_Mean = round(mean(Temperature, na.rm = T), 2),
Temperature_Range = round(diff(range(Temperature, na.rm = T)), 2),
Specific_Conductance_Slope = signif(coef(spc_lm)[2], 3),
Specific_Conductance_Rsquared = round(summary(spc_lm)$r.squared, 2),
Specific_Conductance_RMSE = signif(sqrt(mean(spc_lm$residuals^2)), 2),
Specific_Conductance_Mean = round(mean(Specific_Conductance, na.rm = T), 2),
Specific_Conductance_Range = round(diff(range(Specific_Conductance, na.rm = T)), 2),
pH_Slope = signif(coef(pH_lm)[2], 3),
pH_Rsquared = round(summary(pH_lm)$r.squared, 2),
pH_RMSE = signif(sqrt(mean(pH_lm$residuals^2)), 2),
pH_Mean = round(mean(pH, na.rm = T), 2),
pH_Range = round(diff(range(pH, na.rm = T)), 2))
manta_summary <- manta_summary %>%
add_row(manta_summary_row)
manta_summary_out <- manta_summary %>%
mutate(Date = as.character(paste(' ', Date)))%>%
mutate_all(~ifelse(is.na(.), -9999, .)) %>%
add_row(Site_ID ='U20',
Date = '-9999',
Temperature_Slope = -9999,
Temperature_Rsquared = -9999,
Temperature_RMSE =-9999)
View(manta_summary_out)
manta_summary_out <- manta_summary %>%
mutate(Date = as.character(paste(' ', Date)))%>%
mutate_all(~ifelse(is.na(.), -9999, .)) %>%
add_row(Site_ID ='U20',
Date = '-9999',
Temperature_Slope = -9999,
Temperature_Rsquared = -9999,
Temperature_RMSE = -9999,
Temperature_Mean = -9999,
Temperature_Range = -9999,
Specific_Conductance_Slope = -9999,
Specific_Conductance_Rsquared = -9999,
Specific_Conductance_RMSE = -9999,
Specific_Conductance_Mean = -9999,
Specific_Conductance_Range = -9999,
pH_Slope = -9999,
pH_Rsquared = -9999,
pH_RMSE = -9999,
pH_Mean = -9999,
pH_Range = -9999)
# Recalculate barotroll and manta summary files
#
# Status: COMPLETE
#
# Notes:
#
# ==============================================================================
#
# Author: Brieanne Forbes
# 10 April 2024
rm(list=ls(all=TRUE))
library(tidyverse)
library(lubridate)
data_dir <- 'Z:/00_Cross-SFA_ESSDIVE-Data-Package-Upload/01_Study-Data-Package-Folders/SFA_SpatialStudy_2021_SensorData_v3/v3_SFA_SpatialStudy_2021_SensorData/'
baro_files <- list.files(paste0(data_dir, '/BarotrollAtm/Data'), full.names = T, recursive = T)
manta_files <- list.files(paste0(data_dir, '/MantaRiver/Data'), full.names = T, recursive = T)
#create empty tibble for summary
baro_summary <- tibble()
manta_summary <- tibble()
rm(list=ls(all=TRUE))
# ==============================================================================
library(tidyverse)
library(lubridate)
# ================================= User inputs ================================
data_dir <- 'Z:/00_Cross-SFA_ESSDIVE-Data-Package-Upload/01_Study-Data-Package-Folders/SFA_SpatialStudy_2021_SensorData_v3/v3_SFA_SpatialStudy_2021_SensorData/'
# ================================= find files ================================
baro_files <- list.files(paste0(data_dir, '/BarotrollAtm/Data'), full.names = T, recursive = T)
manta_files <- list.files(paste0(data_dir, '/MantaRiver/Data'), full.names = T, recursive = T)
# =========================== loop through baro ===============================
#create empty tibble for summary
baro_summary <- baro_data %>%
summarize(Site_ID = as.character(),
Date = ymd(),
Pressure_Slope = as.numeric(),
Pressure_Rsquared = as.numeric(),
Pressure_RMSE = as.numeric(),
Pressure_Mean = as.numeric(),
Pressure_Range = as.numeric(),
Air_Temperature_Slope = as.numeric(),
Air_Temperature_Rsquared = as.numeric(),
Air_Temperature_RMSE = as.numeric(),
Air_Temperature_Mean = as.numeric(),
Air_Temperature_Range = as.numeric())
# =========================== loop through baro ===============================
#create empty tibble for summary
baro_summary <- tibble(Site_ID = as.character(),
Date = ymd(),
Pressure_Slope = as.numeric(),
Pressure_Rsquared = as.numeric(),
Pressure_RMSE = as.numeric(),
Pressure_Mean = as.numeric(),
Pressure_Range = as.numeric(),
Air_Temperature_Slope = as.numeric(),
Air_Temperature_Rsquared = as.numeric(),
Air_Temperature_RMSE = as.numeric(),
Air_Temperature_Mean = as.numeric(),
Air_Temperature_Range = as.numeric())
for (baro in baro_files) {
baro_data <- read_csv(baro, comment = '#')%>%
mutate(Elapsed_Minutes = as.numeric(DateTime - min(DateTime), units = "mins"))
press_lm <- lm(baro_data$Pressure ~ baro_data$Elapsed_Minutes)
air_temp_lm <- lm(baro_data$Air_Temperature ~ baro_data$Elapsed_Minutes)
baro_summary_row <- baro_data %>%
summarize(Site_ID = unique(Site_ID),
Date = unique(as.Date(DateTime)),
Pressure_Slope = signif(coef(press_lm)[2], 3),
Pressure_Rsquared = round(summary(press_lm)$r.squared, 2),
Pressure_RMSE = signif(sqrt(mean(press_lm$residuals^2)), 2),
Pressure_Mean = round(mean(Pressure, na.rm = T), 2),
Pressure_Range = round(diff(range(Pressure, na.rm = T)), 2),
Air_Temperature_Slope = signif(coef(air_temp_lm)[2], 3),
Air_Temperature_Rsquared = round(summary(air_temp_lm)$r.squared, 2),
Air_Temperature_RMSE = signif(sqrt(mean(air_temp_lm$residuals^2)), 2),
Air_Temperature_Mean = round(mean(Air_Temperature, na.rm = T), 2),
Air_Temperature_Range = round(diff(range(Air_Temperature, na.rm = T)), 2))
baro_summary <- baro_summary %>%
add_row(baro_summary_row)
}
baro_summary_out <- baro_summary %>%
mutate(Date = as.character(paste(' ', Date)))%>%
mutate_all(~ifelse(is.na(.), -9999, .))
baro_header <- tibble(header = c("# HeaderRows_14",
"# HeaderRows_Format: Column_Header; Unit; InstallationMethod_ID; Instrument_Summary",
"# Date; YYYY-MM-DD; TreeRope_01; In Situ Rugged BaroTROLL 100 ABS real time clock.",
"# Pressure_Slope; millibars_per_minute; TreeRope_01; In Situ Rugged BaroTROLL 100 ABS with piezoresistive ceramic pressure sensor.",
"# Pressure_Rsquared; N/A; TreeRope_01; In Situ Rugged BaroTROLL 100 ABS with piezoresistive ceramic pressure sensor.",
"# Pressure_RMSE; millibars; TreeRope_01; In Situ Rugged BaroTROLL 100 ABS with piezoresistive ceramic pressure sensor.",
"# Pressure_Mean; millibars; TreeRope_01; In Situ Rugged BaroTROLL 100 ABS with piezoresistive ceramic pressure sensor.",
"# Pressure_Range; millibars; TreeRope_01; In Situ Rugged BaroTROLL 100 ABS with piezoresistive ceramic pressure sensor.",
"# Air_Temperature_Slope; degree_celsius_per_minute; TreeRope_01; In Situ Rugged BaroTROLL 100 ABS with silicon thermistor.",
"# Air_Temperature_Rsquared; N/A; TreeRope_01; In Situ Rugged BaroTROLL 100 ABS with silicon thermistor.",
"# Air_Temperature_RMSE; degree_celsius; TreeRope_01; In Situ Rugged BaroTROLL 100 ABS with silicon thermistor.",
"# Air_Temperature_Mean; degree_celsius; TreeRope_01; In Situ Rugged BaroTROLL 100 ABS with silicon thermistor.",
"# Air_Temperature_Range; degree_celsius; TreeRope_01; In Situ Rugged BaroTROLL 100 ABS with silicon thermistor."))
# =========================== loop through manta ===============================
#create empty tibble for summary
manta_summary <- tibble(Site_ID = as.character(),
Date = ymd(),
Temperature_Slope = as.numeric(),
Temperature_Rsquared = as.numeric(),
Temperature_RMSE = as.numeric(),
Temperature_Mean = as.numeric(),
Temperature_Range = as.numeric(),
Specific_Conductance_Slope = as.numeric(),
Specific_Conductance_Rsquared = as.numeric(),
Specific_Conductance_RMSE = as.numeric(),
Specific_Conductance_Mean = as.numeric(),
Specific_Conductance_Range = as.numeric(),
pH_Slope = as.numeric(),
pH_Rsquared = as.numeric(),
pH_RMSE = as.numeric(),
pH_Mean = as.numeric(),
pH_Range = as.numeric())
for (manta in manta_files) {
manta_data <- read_csv(manta, comment = '#')%>%
mutate(Elapsed_Minutes = as.numeric(DateTime - min(DateTime), units = "mins"))
manta_temp_lm <- lm(manta_data$Temperature ~ manta_data$Elapsed_Minutes)
spc_lm <- lm(manta_data$Specific_Conductance ~ manta_data$Elapsed_Minutes)
pH_lm <- lm(manta_data$pH ~ manta_data$Elapsed_Minutes)
manta_summary_row <- manta_data %>%
summarize(Site_ID = unique(Site_ID),
Date = unique(as.Date(DateTime)),
Temperature_Slope = signif(coef(manta_temp_lm)[2], 3),
Temperature_Rsquared = round(summary(manta_temp_lm)$r.squared, 2),
Temperature_RMSE = signif(sqrt(mean(manta_temp_lm$residuals^2)), 2),
Temperature_Mean = round(mean(Temperature, na.rm = T), 2),
Temperature_Range = round(diff(range(Temperature, na.rm = T)), 2),
Specific_Conductance_Slope = signif(coef(spc_lm)[2], 3),
Specific_Conductance_Rsquared = round(summary(spc_lm)$r.squared, 2),
Specific_Conductance_RMSE = signif(sqrt(mean(spc_lm$residuals^2)), 2),
Specific_Conductance_Mean = round(mean(Specific_Conductance, na.rm = T), 2),
Specific_Conductance_Range = round(diff(range(Specific_Conductance, na.rm = T)), 2),
pH_Slope = signif(coef(pH_lm)[2], 3),
pH_Rsquared = round(summary(pH_lm)$r.squared, 2),
pH_RMSE = signif(sqrt(mean(pH_lm$residuals^2)), 2),
pH_Mean = round(mean(pH, na.rm = T), 2),
pH_Range = round(diff(range(pH, na.rm = T)), 2))
manta_summary <- manta_summary %>%
add_row(manta_summary_row)
}
View(manta_data)
'pH' %in% colnames(manta_data)
!'pH' %in% colnames(manta_data)
# =========================== loop through manta ===============================
#create empty tibble for summary
manta_summary <- tibble(Site_ID = as.character(),
Date = ymd(),
Temperature_Slope = as.numeric(),
Temperature_Rsquared = as.numeric(),
Temperature_RMSE = as.numeric(),
Temperature_Mean = as.numeric(),
Temperature_Range = as.numeric(),
Specific_Conductance_Slope = as.numeric(),
Specific_Conductance_Rsquared = as.numeric(),
Specific_Conductance_RMSE = as.numeric(),
Specific_Conductance_Mean = as.numeric(),
Specific_Conductance_Range = as.numeric(),
pH_Slope = as.numeric(),
pH_Rsquared = as.numeric(),
pH_RMSE = as.numeric(),
pH_Mean = as.numeric(),
pH_Range = as.numeric())
for (manta in manta_files) {
manta_data <- read_csv(manta, comment = '#')%>%
mutate(Elapsed_Minutes = as.numeric(DateTime - min(DateTime), units = "mins"))
manta_temp_lm <- lm(manta_data$Temperature ~ manta_data$Elapsed_Minutes)
spc_lm <- lm(manta_data$Specific_Conductance ~ manta_data$Elapsed_Minutes)
if('pH' %in% colnames(manta_data)){
pH_lm <- lm(manta_data$pH ~ manta_data$Elapsed_Minutes)
manta_summary_row <- manta_data %>%
summarize(Site_ID = unique(Site_ID),
Date = unique(as.Date(DateTime)),
Temperature_Slope = signif(coef(manta_temp_lm)[2], 3),
Temperature_Rsquared = round(summary(manta_temp_lm)$r.squared, 2),
Temperature_RMSE = signif(sqrt(mean(manta_temp_lm$residuals^2)), 2),
Temperature_Mean = round(mean(Temperature, na.rm = T), 2),
Temperature_Range = round(diff(range(Temperature, na.rm = T)), 2),
Specific_Conductance_Slope = signif(coef(spc_lm)[2], 3),
Specific_Conductance_Rsquared = round(summary(spc_lm)$r.squared, 2),
Specific_Conductance_RMSE = signif(sqrt(mean(spc_lm$residuals^2)), 2),
Specific_Conductance_Mean = round(mean(Specific_Conductance, na.rm = T), 2),
Specific_Conductance_Range = round(diff(range(Specific_Conductance, na.rm = T)), 2),
pH_Slope = signif(coef(pH_lm)[2], 3),
pH_Rsquared = round(summary(pH_lm)$r.squared, 2),
pH_RMSE = signif(sqrt(mean(pH_lm$residuals^2)), 2),
pH_Mean = round(mean(pH, na.rm = T), 2),
pH_Range = round(diff(range(pH, na.rm = T)), 2))
} else{
manta_summary_row <- manta_data %>%
summarize(Site_ID = unique(Site_ID),
Date = unique(as.Date(DateTime)),
Temperature_Slope = signif(coef(manta_temp_lm)[2], 3),
Temperature_Rsquared = round(summary(manta_temp_lm)$r.squared, 2),
Temperature_RMSE = signif(sqrt(mean(manta_temp_lm$residuals^2)), 2),
Temperature_Mean = round(mean(Temperature, na.rm = T), 2),
Temperature_Range = round(diff(range(Temperature, na.rm = T)), 2),
Specific_Conductance_Slope = signif(coef(spc_lm)[2], 3),
Specific_Conductance_Rsquared = round(summary(spc_lm)$r.squared, 2),
Specific_Conductance_RMSE = signif(sqrt(mean(spc_lm$residuals^2)), 2),
Specific_Conductance_Mean = round(mean(Specific_Conductance, na.rm = T), 2),
Specific_Conductance_Range = round(diff(range(Specific_Conductance, na.rm = T)), 2),
pH_Slope = -9999,
pH_Rsquared = -9999,
pH_RMSE = -9999,
pH_Mean = -9999,
pH_Range = -9999)
}
manta_summary <- manta_summary %>%
add_row(manta_summary_row)
}
View(manta_data)
read_csv(manta, comment = '#')
manta
manta_data <- read_csv(manta, comment = '#')%>%
mutate(Elapsed_Minutes = as.numeric(DateTime - min(DateTime), units = "mins"))
manta_data <- read_csv(manta, comment = '#')
manta_data
manta <- manta_files[1]
manta_data <- read_csv(manta, comment = '#')
read_csv(manta, comment = '#')
(str_detect(manta, 'S82')
str_detect(manta, 'S82')
manta <- "Z:/00_Cross-SFA_ESSDIVE-Data-Package-Upload/01_Study-Data-Package-Folders/SFA_SpatialStudy_2021_SensorData_v3/v3_SFA_SpatialStudy_2021_SensorData//MantaRiver/Data/v2_MantaRiver_S82_Satus_2021-09-03.csv"
str_detect(manta, 'S82')
manta_data <- read_csv(manta, comment = '#')%>%
mutate(DateTime = case_when(str_detect(manta, 'S82') ~ as_datetime(DateTime),
TRUE ~ DateTime),
Elapsed_Minutes = as.numeric(DateTime - min(DateTime), units = "mins"))
manta_data <- read_csv(manta, comment = '#')%>%
mutate(DateTime = as_datetime(case_when(str_detect(manta, 'S82') ~ as_datetime(DateTime),
TRUE ~ DateTime)),
Elapsed_Minutes = as.numeric(DateTime - min(DateTime), units = "mins"))
str_detect(manta, 'S82')
manta_data <- read_csv(manta, comment = '#')%>%
mutate(DateTime = as_datetime(DateTime),
Elapsed_Minutes = as.numeric(DateTime - min(DateTime), units = "mins"))
manta_data <- read_csv(manta, comment = '#')
manta_data <- read_csv(manta, comment = '#')%>%
mutate(DateTime = case_when(str_detect(manta, 'S82') ~ mdy_hm(DateTime),
TRUE ~ DateTime),
Elapsed_Minutes = as.numeric(DateTime - min(DateTime), units = "mins"))
manta_data <- read_csv(manta, comment = '#')%>%
mutate(DateTime = case_when(str_detect(manta, 'S82') ~ mdy_hm(DateTime),
TRUE ~ as_datetime(DateTime)),
Elapsed_Minutes = as.numeric(DateTime - min(DateTime), units = "mins"))
# =========================== loop through manta ===============================
#create empty tibble for summary
manta_summary <- tibble(Site_ID = as.character(),
Date = ymd(),
Temperature_Slope = as.numeric(),
Temperature_Rsquared = as.numeric(),
Temperature_RMSE = as.numeric(),
Temperature_Mean = as.numeric(),
Temperature_Range = as.numeric(),
Specific_Conductance_Slope = as.numeric(),
Specific_Conductance_Rsquared = as.numeric(),
Specific_Conductance_RMSE = as.numeric(),
Specific_Conductance_Mean = as.numeric(),
Specific_Conductance_Range = as.numeric(),
pH_Slope = as.numeric(),
pH_Rsquared = as.numeric(),
pH_RMSE = as.numeric(),
pH_Mean = as.numeric(),
pH_Range = as.numeric())
for (manta in manta_files) {
manta_data <- read_csv(manta, comment = '#')%>%
mutate(DateTime = case_when(str_detect(manta, 'S82') ~ mdy_hm(DateTime),
TRUE ~ as_datetime(DateTime)),
Elapsed_Minutes = as.numeric(DateTime - min(DateTime), units = "mins"))
manta_temp_lm <- lm(manta_data$Temperature ~ manta_data$Elapsed_Minutes)
spc_lm <- lm(manta_data$Specific_Conductance ~ manta_data$Elapsed_Minutes)
if('pH' %in% colnames(manta_data)){
pH_lm <- lm(manta_data$pH ~ manta_data$Elapsed_Minutes)
manta_summary_row <- manta_data %>%
summarize(Site_ID = unique(Site_ID),
Date = unique(as.Date(DateTime)),
Temperature_Slope = signif(coef(manta_temp_lm)[2], 3),
Temperature_Rsquared = round(summary(manta_temp_lm)$r.squared, 2),
Temperature_RMSE = signif(sqrt(mean(manta_temp_lm$residuals^2)), 2),
Temperature_Mean = round(mean(Temperature, na.rm = T), 2),
Temperature_Range = round(diff(range(Temperature, na.rm = T)), 2),
Specific_Conductance_Slope = signif(coef(spc_lm)[2], 3),
Specific_Conductance_Rsquared = round(summary(spc_lm)$r.squared, 2),
Specific_Conductance_RMSE = signif(sqrt(mean(spc_lm$residuals^2)), 2),
Specific_Conductance_Mean = round(mean(Specific_Conductance, na.rm = T), 2),
Specific_Conductance_Range = round(diff(range(Specific_Conductance, na.rm = T)), 2),
pH_Slope = signif(coef(pH_lm)[2], 3),
pH_Rsquared = round(summary(pH_lm)$r.squared, 2),
pH_RMSE = signif(sqrt(mean(pH_lm$residuals^2)), 2),
pH_Mean = round(mean(pH, na.rm = T), 2),
pH_Range = round(diff(range(pH, na.rm = T)), 2))
} else{
manta_summary_row <- manta_data %>%
summarize(Site_ID = unique(Site_ID),
Date = unique(as.Date(DateTime)),
Temperature_Slope = signif(coef(manta_temp_lm)[2], 3),
Temperature_Rsquared = round(summary(manta_temp_lm)$r.squared, 2),
Temperature_RMSE = signif(sqrt(mean(manta_temp_lm$residuals^2)), 2),
Temperature_Mean = round(mean(Temperature, na.rm = T), 2),
Temperature_Range = round(diff(range(Temperature, na.rm = T)), 2),
Specific_Conductance_Slope = signif(coef(spc_lm)[2], 3),
Specific_Conductance_Rsquared = round(summary(spc_lm)$r.squared, 2),
Specific_Conductance_RMSE = signif(sqrt(mean(spc_lm$residuals^2)), 2),
Specific_Conductance_Mean = round(mean(Specific_Conductance, na.rm = T), 2),
Specific_Conductance_Range = round(diff(range(Specific_Conductance, na.rm = T)), 2),
pH_Slope = -9999,
pH_Rsquared = -9999,
pH_RMSE = -9999,
pH_Mean = -9999,
pH_Range = -9999)
}
manta_summary <- manta_summary %>%
add_row(manta_summary_row)
}
manta_summary_out <- manta_summary %>%
mutate(Date = as.character(paste(' ', Date)))%>%
mutate_all(~ifelse(is.na(.), -9999, .)) %>%
add_row(Site_ID ='U20',
Date = '-9999',
Temperature_Slope = -9999,
Temperature_Rsquared = -9999,
Temperature_RMSE = -9999,
Temperature_Mean = -9999,
Temperature_Range = -9999,
Specific_Conductance_Slope = -9999,
Specific_Conductance_Rsquared = -9999,
Specific_Conductance_RMSE = -9999,
Specific_Conductance_Mean = -9999,
Specific_Conductance_Range = -9999,
pH_Slope = -9999,
pH_Rsquared = -9999,
pH_RMSE = -9999,
pH_Mean = -9999,
pH_Range = -9999)
View(manta_summary_out)
out_dir <- 'Z:/RC2/04_Spatial_Study_2021/'
baro_out_file <- paste0(out_dir, '01_BarotrollAtm/03_ProcessedData/v2_BarotrollAtm_Summary_Statistics.csv')
baro_out_file <- paste0(out_dir, '01_BarotrollAtm/03_ProcessedData/v2_BarotrollAtm_Summary_Statistics.csv')
write_csv(baro_header, baro_out_file, append = F, col_names = F)
write_csv(baro_summary_out, baro_out_file, append = T, col_names = T)
manta_out_file <- paste0(out_dir, '02_MantaRiver/03_ProcessedData/v2_MantaRiver_Summary_Statistics.csv')
write_csv(manta_header, manta_out_file, append = F, col_names = F)
write_csv(manta_summary_out, manta_out_file, append = T, col_names = T)
manta_header <- tibble(header = c("# HeaderRows_19",
"# HeaderRows_Format: Column_Header; Unit; InstallationMethod_ID; Instrument_Summary",
"# Date; YYYY-MM-DD; Pipe_Kit_02; Eureka Manta+ 35B real time clock.",
"# Temperature_Slope; degree_celsius_per_minute; Pipe_Kit_02; Eureka Manta+ 35B with thermistor.",
"# Temperature_Rsquared; N/A; Pipe_Kit_02; Eureka Manta+ 35B with thermistor.",
"# Temperature_RMSE; degree_celsius; Pipe_Kit_02; Eureka Manta+ 35B with thermistor.",
"# Temperature_Mean; degree_celsius; Pipe_Kit_02; Eureka Manta+ 35B with thermistor.",
"# Temperature_Range; degree_celsius; Pipe_Kit_02; Eureka Manta+ 35B with thermistor.",
"# Specific_Conductance_Slope; microsiemens_per_centimeter_per minute; Pipe_Kit_02; Eureka Manta+ 35B with graphite four-electrode sensor.",
"# Specific_Conductance_Rsquared; N/A; Pipe_Kit_02; Eureka Manta+ 35B with graphite four-electrode sensor.",
"# Specific_Conductance_RMSE; microsiemens_per_centimeter; Pipe_Kit_02; Eureka Manta+ 35B with graphite four-electrode sensor.",
"# Specific_Conductance_Mean; microsiemens_per_centimeter; Pipe_Kit_02; Eureka Manta+ 35B with graphite four-electrode sensor.",
"# Specific_Conductance_Range; microsiemens_per_centimeter; Pipe_Kit_02; Eureka Manta+ 35B with graphite four-electrode sensor.",
"# pH_Slope; pH_units_per_minute; Pipe_Kit_02; Eureka Manta+ 35B with glass pH sensor and reference electrode.",
"# pH_Rsquared; N/A; Pipe_Kit_02; Eureka Manta+ 35B with glass pH sensor and reference electrode.",
"# pH_RMSE; pH; Pipe_Kit_02; Eureka Manta+ 35B with glass pH sensor and reference electrode.",
"# pH_Mean; pH; Pipe_Kit_02; Eureka Manta+ 35B with glass pH sensor and reference electrode.",
"# pH_Range; pH; Pipe_Kit_02; Eureka Manta+ 35B with glass pH sensor and reference electrode."))
manta_out_file <- paste0(out_dir, '02_MantaRiver/03_ProcessedData/v2_MantaRiver_Summary_Statistics.csv')
write_csv(manta_header, manta_out_file, append = F, col_names = F)
write_csv(manta_summary_out, manta_out_file, append = T, col_names = T)
